{"ast":null,"code":"import { createAction, createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  races: {\n    loading: false,\n    error: false,\n    options: []\n  },\n  classes: {\n    loading: false,\n    error: false,\n    options: []\n  },\n  backgrounds: {\n    loading: false,\n    error: false,\n    options: []\n  }\n};\nconst SLICE_NAME = 'common';\nconst commonSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {\n    getAllRacesLoading: state => {\n      state.races.loading = true;\n    },\n    getAllRacesSuccess: (state, action) => {\n      state.races.loading = false;\n      state.races.error = false;\n      state.races.options = action.payload;\n    },\n    getAllRacesFailure: state => {\n      state.races.loading = false;\n      state.races.error = true;\n    }\n  }\n});\nexport const {\n  reducer: commonReducer\n} = commonSlice;\nexport const commonActions = { ...commonSlice.actions,\n  getAllRaces: createAction(`${SLICE_NAME}/getAllRaces`)\n};","map":{"version":3,"sources":["/Users/meganjevin/Desktop/Code/character-builder/src/store/slices/common.ts"],"names":["createAction","createSlice","initialState","races","loading","error","options","classes","backgrounds","SLICE_NAME","commonSlice","name","reducers","getAllRacesLoading","state","getAllRacesSuccess","action","payload","getAllRacesFailure","reducer","commonReducer","commonActions","actions","getAllRaces"],"mappings":"AAAA,SAAwBA,YAAxB,EAAsCC,WAAtC,QAAyD,kBAAzD;AAwBA,MAAMC,YAAyB,GAAG;AAChCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,KADJ;AAELC,IAAAA,KAAK,EAAE,KAFF;AAGLC,IAAAA,OAAO,EAAE;AAHJ,GADyB;AAMhCC,EAAAA,OAAO,EAAE;AACPH,IAAAA,OAAO,EAAE,KADF;AAEPC,IAAAA,KAAK,EAAE,KAFA;AAGPC,IAAAA,OAAO,EAAE;AAHF,GANuB;AAWhCE,EAAAA,WAAW,EAAE;AACXJ,IAAAA,OAAO,EAAE,KADE;AAEXC,IAAAA,KAAK,EAAE,KAFI;AAGXC,IAAAA,OAAO,EAAE;AAHE;AAXmB,CAAlC;AAkBA,MAAMG,UAAU,GAAG,QAAnB;AAEA,MAAMC,WAAW,GAAGT,WAAW,CAAC;AAC9BU,EAAAA,IAAI,EAAEF,UADwB;AAE9BP,EAAAA,YAF8B;AAG9BU,EAAAA,QAAQ,EAAE;AACRC,IAAAA,kBAAkB,EAAGC,KAAD,IAAW;AAC7BA,MAAAA,KAAK,CAACX,KAAN,CAAYC,OAAZ,GAAsB,IAAtB;AACD,KAHO;AAIRW,IAAAA,kBAAkB,EAAE,CAACD,KAAD,EAAQE,MAAR,KAA0C;AAC5DF,MAAAA,KAAK,CAACX,KAAN,CAAYC,OAAZ,GAAsB,KAAtB;AACAU,MAAAA,KAAK,CAACX,KAAN,CAAYE,KAAZ,GAAoB,KAApB;AACAS,MAAAA,KAAK,CAACX,KAAN,CAAYG,OAAZ,GAAsBU,MAAM,CAACC,OAA7B;AACD,KARO;AASRC,IAAAA,kBAAkB,EAAGJ,KAAD,IAAW;AAC7BA,MAAAA,KAAK,CAACX,KAAN,CAAYC,OAAZ,GAAsB,KAAtB;AACAU,MAAAA,KAAK,CAACX,KAAN,CAAYE,KAAZ,GAAoB,IAApB;AACD;AAZO;AAHoB,CAAD,CAA/B;AAmBA,OAAO,MAAM;AAAEc,EAAAA,OAAO,EAAEC;AAAX,IAA6BV,WAAnC;AAEP,OAAO,MAAMW,aAAa,GAAG,EAC3B,GAAGX,WAAW,CAACY,OADY;AAG3BC,EAAAA,WAAW,EAAEvB,YAAY,CAAE,GAAES,UAAW,cAAf;AAHE,CAAtB","sourcesContent":["import { PayloadAction, createAction, createSlice } from '@reduxjs/toolkit';\nimport { Race } from '../../types';\n\nexport interface CommonState {\n  races: {\n    loading: boolean;\n    error: boolean;\n    options: Race[];\n    selected?: string;\n  },\n  classes: {\n    loading: boolean;\n    error: boolean;\n    options: [];\n    selected?: string;\n  },\n  backgrounds: {\n    loading: boolean;\n    error: boolean;\n    options: [];\n    selected?: string;\n  },\n}\n\nconst initialState: CommonState = {\n  races: {\n    loading: false,\n    error: false,\n    options: []\n  },\n  classes: {\n    loading: false,\n    error: false,\n    options: []\n  },\n  backgrounds: {\n    loading: false,\n    error: false,\n    options: []\n  },\n};\n\nconst SLICE_NAME = 'common';\n\nconst commonSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {\n    getAllRacesLoading: (state) => {\n      state.races.loading = true;\n    },\n    getAllRacesSuccess: (state, action: PayloadAction<Race[]>) => {\n      state.races.loading = false;\n      state.races.error = false;\n      state.races.options = action.payload;\n    },\n    getAllRacesFailure: (state) => {\n      state.races.loading = false;\n      state.races.error = true;\n    },\n  },\n});\n\nexport const { reducer: commonReducer } = commonSlice;\n\nexport const commonActions = {\n  ...commonSlice.actions,\n\n  getAllRaces: createAction(`${SLICE_NAME}/getAllRaces`),\n};\n"]},"metadata":{},"sourceType":"module"}