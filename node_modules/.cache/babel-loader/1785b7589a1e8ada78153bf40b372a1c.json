{"ast":null,"code":"var _jsxFileName = \"/Users/meganjevin/Desktop/Code/character-builder/src/app/pages/characterBuilder.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport styled from 'styled-components';\nimport { useAppDispatch } from '../../helpers/hooks';\nimport { commonActions } from '../../store/slices/common';\nimport { useAllRaces } from '../../store/selectors/common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledCharacterBuilderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: white;\n`;\n_c = StyledCharacterBuilderContainer;\nconst StyledCharacterBuilderTitle = styled.h1``;\n_c2 = StyledCharacterBuilderTitle;\nconst StyledStepsContainer = styled.div``;\n_c3 = StyledStepsContainer;\nconst StyledStepsHeader = styled.h3``;\n_c4 = StyledStepsHeader;\nconst StyledSelect = styled.select``;\n_c5 = StyledSelect;\n// When page loads, animate into character builder component\n// When page loads, make a request to the API to get back all races\nexport const CharacterBuilder = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const allRaces = useAllRaces();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  const [selectedRace, setSelectedRace] = React.useState('');\n  React.useEffect(() => {\n    dispatch(commonActions.getAllRaces());\n    console.log(allRaces);\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(StyledCharacterBuilderContainer, {\n    children: [/*#__PURE__*/_jsxDEV(StyledCharacterBuilderTitle, {\n      children: \"Character builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledStepsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(StyledStepsHeader, {\n        children: \"Step One: Race\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(StyledSelect, {\n          defaultValue: \"test\",\n          ...register('race'),\n          onChange: e => {\n            setSelectedRace(e.target.value);\n          },\n          children: allRaces && allRaces.map(race => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: race.name\n          }, race.index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), errors.raceRequired && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CharacterBuilder, \"joeMCkv0xFb8+rMSwsqy/xEEbkc=\", false, function () {\n  return [useAppDispatch, useAllRaces, useForm];\n});\n\n_c6 = CharacterBuilder;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"StyledCharacterBuilderContainer\");\n$RefreshReg$(_c2, \"StyledCharacterBuilderTitle\");\n$RefreshReg$(_c3, \"StyledStepsContainer\");\n$RefreshReg$(_c4, \"StyledStepsHeader\");\n$RefreshReg$(_c5, \"StyledSelect\");\n$RefreshReg$(_c6, \"CharacterBuilder\");","map":{"version":3,"sources":["/Users/meganjevin/Desktop/Code/character-builder/src/app/pages/characterBuilder.tsx"],"names":["React","useForm","styled","useAppDispatch","commonActions","useAllRaces","StyledCharacterBuilderContainer","div","StyledCharacterBuilderTitle","h1","StyledStepsContainer","StyledStepsHeader","h3","StyledSelect","select","CharacterBuilder","dispatch","allRaces","register","handleSubmit","formState","errors","onSubmit","data","console","log","selectedRace","setSelectedRace","useState","useEffect","getAllRaces","e","target","value","map","race","name","index","raceRequired"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAuC,iBAAvC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,WAAT,QAA4B,8BAA5B;;AAEA,MAAMC,+BAA+B,GAAGJ,MAAM,CAACK,GAAI;AACnD;AACA;AACA;AACA;AACA;AACA,CANA;KAAMD,+B;AAQN,MAAME,2BAA2B,GAAGN,MAAM,CAACO,EAAG,EAA9C;MAAMD,2B;AAEN,MAAME,oBAAoB,GAAGR,MAAM,CAACK,GAAI,EAAxC;MAAMG,oB;AAEN,MAAMC,iBAAiB,GAAGT,MAAM,CAACU,EAAG,EAApC;MAAMD,iB;AAEN,MAAME,YAAY,GAAGX,MAAM,CAACY,MAAO,EAAnC;MAAMD,Y;AAON;AACA;AAEA,OAAO,MAAME,gBAA0B,GAAG,MAAM;AAAA;;AAC9C,QAAMC,QAAQ,GAAGb,cAAc,EAA/B;AACA,QAAMc,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAM;AACJa,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAHP,MAIFpB,OAAO,EAJX;;AAKA,QAAMqB,QAA+B,GAAIC,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAlD;;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkC3B,KAAK,CAAC4B,QAAN,CAAuB,EAAvB,CAAxC;AAEA5B,EAAAA,KAAK,CAAC6B,SAAN,CAAgB,MAAM;AACpBb,IAAAA,QAAQ,CAACZ,aAAa,CAAC0B,WAAd,EAAD,CAAR;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACD,GAHD,EAGG,CAACD,QAAD,CAHH;AAKA,sBACE,QAAC,+BAAD;AAAA,4BACE,QAAC,2BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,oBAAD;AAAA,8BACE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,QAAQ,EAAEG,YAAY,CAACG,QAAD,CAA5B;AAAA,gCAEE,QAAC,YAAD;AACE,UAAA,YAAY,EAAC,MADf;AAAA,aAEMJ,QAAQ,CAAC,MAAD,CAFd;AAGE,UAAA,QAAQ,EAAGa,CAAD,IAAO;AACfJ,YAAAA,eAAe,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACD,WALH;AAAA,oBAOGhB,QAAQ,IACPA,QAAQ,CAACiB,GAAT,CAAcC,IAAD,iBACX;AAAA,sBAA0BA,IAAI,CAACC;AAA/B,aAAaD,IAAI,CAACE,KAAlB;AAAA;AAAA;AAAA;AAAA,kBADF;AARJ;AAAA;AAAA;AAAA;AAAA,gBAFF,EAeGhB,MAAM,CAACiB,YAAP,iBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAf1B,eAgBE;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CA5CM;;GAAMvB,gB;UACMZ,c,EACAE,W,EAKbJ,O;;;MAPOc,gB","sourcesContent":["import * as React from 'react';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport styled from 'styled-components';\nimport { useAppDispatch } from '../../helpers/hooks';\nimport { commonActions } from '../../store/slices/common';\nimport { useAllRaces } from '../../store/selectors/common';\n\nconst StyledCharacterBuilderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: white;\n`;\n\nconst StyledCharacterBuilderTitle = styled.h1``;\n\nconst StyledStepsContainer = styled.div``;\n\nconst StyledStepsHeader = styled.h3``;\n\nconst StyledSelect = styled.select``;\n\ntype Inputs = {\n  race: string;\n  raceRequired: string;\n};\n\n// When page loads, animate into character builder component\n// When page loads, make a request to the API to get back all races\n\nexport const CharacterBuilder: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const allRaces = useAllRaces();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<Inputs>();\n  const onSubmit: SubmitHandler<Inputs> = (data) => console.log(data);\n  const [selectedRace, setSelectedRace] = React.useState<string>('');\n\n  React.useEffect(() => {\n    dispatch(commonActions.getAllRaces());\n    console.log(allRaces);\n  }, [dispatch]);\n\n  return (\n    <StyledCharacterBuilderContainer>\n      <StyledCharacterBuilderTitle>\n        Character builder\n      </StyledCharacterBuilderTitle>\n      <StyledStepsContainer>\n        <StyledStepsHeader>Step One: Race</StyledStepsHeader>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          {/* register your input into the hook by invoking the \"register\" function */}\n          <StyledSelect\n            defaultValue=\"test\"\n            {...register('race')}\n            onChange={(e) => {\n              setSelectedRace(e.target.value);\n            }}\n          >\n            {allRaces &&\n              allRaces.map((race) => (\n                <option key={race.index}>{race.name}</option>\n              ))}\n          </StyledSelect>\n          {/* errors will return when field validation fails  */}\n          {errors.raceRequired && <span>This field is required</span>}\n          <input type=\"submit\" />\n        </form>\n      </StyledStepsContainer>\n    </StyledCharacterBuilderContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}