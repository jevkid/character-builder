{"ast":null,"code":"var _jsxFileName = \"/Users/meganjevin/Desktop/Code/character-builder/src/app/pages/characterBuilder.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport styled from 'styled-components';\nimport { useAppDispatch } from '../../helpers/hooks';\nimport { commonActions } from '../../store/slices/common';\nimport { useAllRaces, useAllSubRaces, useAllClasses, useAllSubClasses } from '../../store/selectors/common';\nimport { TEXT_COLOR_PRIMARY, TEXT_COLOR_SECONDARY } from '../styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledCharacterBuilderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  color: ${TEXT_COLOR_PRIMARY};\n`;\n_c = StyledCharacterBuilderContainer;\nconst StyledCharacterBuilderTitle = styled.h1`\n  text-align: center;\n`;\n_c2 = StyledCharacterBuilderTitle;\nconst StyledCharacterBuilderTitleContainer = styled.div`\n  text-align: center;\n  margin-bottom: 32px;\n`;\n_c3 = StyledCharacterBuilderTitleContainer;\nconst StyledStepsContainer = styled.div``;\n_c4 = StyledStepsContainer;\nconst StyledStep = styled.div`\n  text-align: center;\n`;\n_c5 = StyledStep;\nconst StyledStepsHeader = styled.h3`\n  text-align: center;\n  margin: 12px 0;\n`;\n_c6 = StyledStepsHeader;\nconst StyledStepsSubheader = styled.h5`\n  text-align: center;\n  margin: 12px 0;\n`;\n_c7 = StyledStepsSubheader;\nconst StyledSelect = styled.select`\n  width: 200px;\n  height: 30px;\n  border-radius: 5px;\n  margin: 12px 0;\n`;\n_c8 = StyledSelect;\nconst StyledRandomiseButton = styled.a`\n  font-size: inherit;\n  color: ${TEXT_COLOR_SECONDARY};\n  &:hover {\n    cursor: pointer;\n    color: ${TEXT_COLOR_PRIMARY};\n  }\n`;\n_c9 = StyledRandomiseButton;\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c10 = StyledForm;\nconst StyledP = styled.p`\n  margin: 12px 0;\n`;\n_c11 = StyledP;\nexport const CharacterBuilder = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const [displayRandom, setDisplayRandom] = React.useState(false);\n  const allRaces = useAllRaces();\n  const allSubRaces = useAllSubRaces();\n  const allClasses = useAllClasses();\n  const allSubClasses = useAllSubClasses();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  const [selectedRace, setSelectedRace] = React.useState(undefined);\n  const [selectedSubRace, setSelectedSubRace] = React.useState(undefined);\n  const [selectedClass, setSelectedClass] = React.useState(undefined);\n  const [selectedSubClass, setSelectedSubClass] = React.useState(undefined);\n\n  const getRandomInt = maxInt => {\n    return Math.floor(Math.random() * maxInt);\n  };\n\n  const handleRandomise = arr => {\n    const randomInt = getRandomInt(arr.length);\n    return arr[randomInt];\n  };\n\n  const handleRandomRace = () => {\n    const randomRace = handleRandomise(allRaces === null || allRaces === void 0 ? void 0 : allRaces.results);\n    setSelectedRace({\n      index: randomRace.index,\n      name: randomRace.name\n    });\n  };\n\n  const handleSelectedRace = (index, arr) => {\n    const selectedRace = allRaces === null || allRaces === void 0 ? void 0 : allRaces.results.filter(race => race.index === index);\n\n    if (selectedRace.length > 0) {\n      setSelectedRace({\n        index: selectedRace[0].index,\n        name: selectedRace[0].name\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    dispatch(commonActions.getAllRaces());\n\n    if (selectedRace) {\n      dispatch(commonActions.getAllSubRaces());\n    }\n  }, [selectedRace]);\n  return /*#__PURE__*/_jsxDEV(StyledCharacterBuilderContainer, {\n    children: [/*#__PURE__*/_jsxDEV(StyledCharacterBuilderTitleContainer, {\n      children: [/*#__PURE__*/_jsxDEV(StyledCharacterBuilderTitle, {\n        children: \"Character builder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledP, {\n        children: [\"Build your character step by step or completely\", ' ', /*#__PURE__*/_jsxDEV(StyledRandomiseButton, {\n          children: \"randomise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), !displayRandom ? /*#__PURE__*/_jsxDEV(StyledStepsContainer, {\n      children: /*#__PURE__*/_jsxDEV(StyledForm, {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(StyledStep, {\n          children: [/*#__PURE__*/_jsxDEV(StyledStepsHeader, {\n            children: \"Step One: Race\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledStepsSubheader, {\n            children: [\"Select a race or\", ' ', /*#__PURE__*/_jsxDEV(StyledRandomiseButton, {\n              onClick: () => handleRandomRace(),\n              children: \"randomise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), ' ', \"it.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledSelect, {\n            value: selectedRace === null || selectedRace === void 0 ? void 0 : selectedRace.name,\n            ...register('race'),\n            onChange: e => {\n              handleSelectedRace(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              selected: true,\n              disabled: true,\n              children: \"- - - -\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), allRaces && allRaces.results.map(race => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: race.index,\n              children: race.name\n            }, race.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), errors.race && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), allSubRaces && allSubRaces.results.length > 0 && /*#__PURE__*/_jsxDEV(StyledStep, {\n          children: [/*#__PURE__*/_jsxDEV(StyledStepsSubheader, {\n            children: [\"Select a subrace or\", ' ', /*#__PURE__*/_jsxDEV(StyledRandomiseButton, {\n              onClick: () => handleRandomRace(),\n              children: \"randomise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this), ' ', \"it.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(StyledSelect, {\n            value: selectedSubRace,\n            ...register('subRace'),\n            onChange: e => {\n              console.log(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              selected: true,\n              disabled: true,\n              children: \"- - - -\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this), allSubRaces && allSubRaces.results.map(subRace => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: subRace.name\n            }, subRace.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this), errors.subRace && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this), allClasses && allClasses.results.length > 0 && /*#__PURE__*/_jsxDEV(StyledStep, {\n          children: [/*#__PURE__*/_jsxDEV(StyledStepsHeader, {\n            children: \"Step Two: Class\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(StyledStepsSubheader, {\n            children: [\"Select a class or\", ' ', /*#__PURE__*/_jsxDEV(StyledRandomiseButton, {\n              onClick: () => handleRandomRace(),\n              children: \"randomise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this), ' ', \"it.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(StyledSelect, {\n            value: selectedClass,\n            ...register('class'),\n            onChange: e => {\n              console.log(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              selected: true,\n              disabled: true,\n              children: \"- - - -\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 19\n            }, this), allClasses && allClasses.results.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: item.name\n            }, item.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this), errors.class && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Random\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CharacterBuilder, \"DcXekDNNKuDR7PUOMNrBW1ASGN8=\", false, function () {\n  return [useAppDispatch, useAllRaces, useAllSubRaces, useAllClasses, useAllSubClasses, useForm];\n});\n\n_c12 = CharacterBuilder;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n\n$RefreshReg$(_c, \"StyledCharacterBuilderContainer\");\n$RefreshReg$(_c2, \"StyledCharacterBuilderTitle\");\n$RefreshReg$(_c3, \"StyledCharacterBuilderTitleContainer\");\n$RefreshReg$(_c4, \"StyledStepsContainer\");\n$RefreshReg$(_c5, \"StyledStep\");\n$RefreshReg$(_c6, \"StyledStepsHeader\");\n$RefreshReg$(_c7, \"StyledStepsSubheader\");\n$RefreshReg$(_c8, \"StyledSelect\");\n$RefreshReg$(_c9, \"StyledRandomiseButton\");\n$RefreshReg$(_c10, \"StyledForm\");\n$RefreshReg$(_c11, \"StyledP\");\n$RefreshReg$(_c12, \"CharacterBuilder\");","map":{"version":3,"sources":["/Users/meganjevin/Desktop/Code/character-builder/src/app/pages/characterBuilder.tsx"],"names":["React","useForm","styled","useAppDispatch","commonActions","useAllRaces","useAllSubRaces","useAllClasses","useAllSubClasses","TEXT_COLOR_PRIMARY","TEXT_COLOR_SECONDARY","StyledCharacterBuilderContainer","div","StyledCharacterBuilderTitle","h1","StyledCharacterBuilderTitleContainer","StyledStepsContainer","StyledStep","StyledStepsHeader","h3","StyledStepsSubheader","h5","StyledSelect","select","StyledRandomiseButton","a","StyledForm","form","StyledP","p","CharacterBuilder","dispatch","displayRandom","setDisplayRandom","useState","allRaces","allSubRaces","allClasses","allSubClasses","register","handleSubmit","formState","errors","onSubmit","data","console","log","selectedRace","setSelectedRace","undefined","selectedSubRace","setSelectedSubRace","selectedClass","setSelectedClass","selectedSubClass","setSelectedSubClass","getRandomInt","maxInt","Math","floor","random","handleRandomise","arr","randomInt","length","handleRandomRace","randomRace","results","index","name","handleSelectedRace","filter","race","useEffect","getAllRaces","getAllSubRaces","e","target","value","map","subRace","item","class"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport styled from 'styled-components';\nimport { useAppDispatch } from '../../helpers/hooks';\nimport { commonActions } from '../../store/slices/common';\nimport {\n  useAllRaces,\n  useAllSubRaces,\n  useAllClasses,\n  useAllSubClasses,\n} from '../../store/selectors/common';\nimport { TEXT_COLOR_PRIMARY, TEXT_COLOR_SECONDARY } from '../styles';\nimport { CommonModel } from '../../types';\n\nconst StyledCharacterBuilderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  color: ${TEXT_COLOR_PRIMARY};\n`;\n\nconst StyledCharacterBuilderTitle = styled.h1`\n  text-align: center;\n`;\n\nconst StyledCharacterBuilderTitleContainer = styled.div`\n  text-align: center;\n  margin-bottom: 32px;\n`;\n\nconst StyledStepsContainer = styled.div``;\n\nconst StyledStep = styled.div`\n  text-align: center;\n`;\n\nconst StyledStepsHeader = styled.h3`\n  text-align: center;\n  margin: 12px 0;\n`;\n\nconst StyledStepsSubheader = styled.h5`\n  text-align: center;\n  margin: 12px 0;\n`;\n\nconst StyledSelect = styled.select`\n  width: 200px;\n  height: 30px;\n  border-radius: 5px;\n  margin: 12px 0;\n`;\n\nconst StyledRandomiseButton = styled.a`\n  font-size: inherit;\n  color: ${TEXT_COLOR_SECONDARY};\n  &:hover {\n    cursor: pointer;\n    color: ${TEXT_COLOR_PRIMARY};\n  }\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst StyledP = styled.p`\n  margin: 12px 0;\n`;\n\ninterface FormInputs {\n  race: string;\n  subRace: string;\n  class: string;\n  subClass: string;\n}\n\ninterface APIReference {\n  index: string;\n  name: string;\n}\n\nexport const CharacterBuilder: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const [displayRandom, setDisplayRandom] = React.useState(false);\n  const allRaces = useAllRaces();\n  const allSubRaces = useAllSubRaces();\n  const allClasses = useAllClasses();\n  const allSubClasses = useAllSubClasses();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<FormInputs>();\n  const onSubmit: SubmitHandler<FormInputs> = (data) => console.log(data);\n  const [selectedRace, setSelectedRace] = React.useState<\n    APIReference | undefined\n  >(undefined);\n  const [selectedSubRace, setSelectedSubRace] = React.useState<\n    string | undefined\n  >(undefined);\n  const [selectedClass, setSelectedClass] = React.useState<string | undefined>(\n    undefined\n  );\n  const [selectedSubClass, setSelectedSubClass] = React.useState<\n    string | undefined\n  >(undefined);\n\n  const getRandomInt = (maxInt: number) => {\n    return Math.floor(Math.random() * maxInt);\n  };\n\n  const handleRandomise = (arr: Array<CommonModel>) => {\n    const randomInt = getRandomInt(arr.length);\n    return arr[randomInt];\n  };\n\n  const handleRandomRace = () => {\n    const randomRace = handleRandomise(allRaces?.results);\n    setSelectedRace({ index: randomRace.index, name: randomRace.name });\n  };\n\n  const handleSelectedRace = (index: string, arr: CommonModel) => {\n    const selectedRace = allRaces?.results.filter(\n      (race) => race.index === index\n    );\n    if (selectedRace.length > 0) {\n      setSelectedRace({\n        index: selectedRace[0].index,\n        name: selectedRace[0].name,\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    dispatch(commonActions.getAllRaces());\n    if (selectedRace) {\n      dispatch(commonActions.getAllSubRaces());\n    }\n  }, [selectedRace]);\n\n  return (\n    <StyledCharacterBuilderContainer>\n      <StyledCharacterBuilderTitleContainer>\n        <StyledCharacterBuilderTitle>\n          Character builder\n        </StyledCharacterBuilderTitle>\n        <StyledP>\n          Build your character step by step or completely{' '}\n          <StyledRandomiseButton>randomise</StyledRandomiseButton>.\n        </StyledP>\n      </StyledCharacterBuilderTitleContainer>\n      {!displayRandom ? (\n        <StyledStepsContainer>\n          <StyledForm onSubmit={handleSubmit(onSubmit)}>\n            {/* Select a race */}\n            <StyledStep>\n              <StyledStepsHeader>Step One: Race</StyledStepsHeader>\n              <StyledStepsSubheader>\n                Select a race or{' '}\n                <StyledRandomiseButton onClick={() => handleRandomRace()}>\n                  randomise\n                </StyledRandomiseButton>{' '}\n                it.\n              </StyledStepsSubheader>\n              <StyledSelect\n                value={selectedRace?.name}\n                {...register('race')}\n                onChange={(e) => {\n                  handleSelectedRace(e.target.value);\n                }}\n              >\n                <option value=\"\" selected disabled>\n                  - - - -\n                </option>\n                {allRaces &&\n                  allRaces.results.map((race) => (\n                    <option key={race.index} value={race.index}>\n                      {race.name}\n                    </option>\n                  ))}\n              </StyledSelect>\n\n              {errors.race && <span>This field is required</span>}\n            </StyledStep>\n            {/* Select a subrace */}\n            {allSubRaces && allSubRaces.results.length > 0 && (\n              <StyledStep>\n                <StyledStepsSubheader>\n                  Select a subrace or{' '}\n                  <StyledRandomiseButton onClick={() => handleRandomRace()}>\n                    randomise\n                  </StyledRandomiseButton>{' '}\n                  it.\n                </StyledStepsSubheader>\n                <StyledSelect\n                  value={selectedSubRace}\n                  {...register('subRace')}\n                  onChange={(e) => {\n                    console.log(e.target.value);\n                  }}\n                >\n                  <option value=\"\" selected disabled>\n                    - - - -\n                  </option>\n                  {allSubRaces &&\n                    allSubRaces.results.map((subRace) => (\n                      <option key={subRace.index}>{subRace.name}</option>\n                    ))}\n                </StyledSelect>\n\n                {errors.subRace && <span>This field is required</span>}\n              </StyledStep>\n            )}\n            {/* Select a class */}\n            {allClasses && allClasses.results.length > 0 && (\n              <StyledStep>\n                <StyledStepsHeader>Step Two: Class</StyledStepsHeader>\n                <StyledStepsSubheader>\n                  Select a class or{' '}\n                  <StyledRandomiseButton onClick={() => handleRandomRace()}>\n                    randomise\n                  </StyledRandomiseButton>{' '}\n                  it.\n                </StyledStepsSubheader>\n                <StyledSelect\n                  value={selectedClass}\n                  {...register('class')}\n                  onChange={(e) => {\n                    console.log(e.target.value);\n                  }}\n                >\n                  <option value=\"\" selected disabled>\n                    - - - -\n                  </option>\n                  {allClasses &&\n                    allClasses.results.map((item) => (\n                      <option key={item.index}>{item.name}</option>\n                    ))}\n                </StyledSelect>\n\n                {errors.class && <span>This field is required</span>}\n              </StyledStep>\n            )}\n            {/* Select a subclass */}\n            {/* Set ability scores */}\n            {/* Select a background */}\n          </StyledForm>\n        </StyledStepsContainer>\n      ) : (\n        <h2>Random</h2>\n      )}\n    </StyledCharacterBuilderContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}