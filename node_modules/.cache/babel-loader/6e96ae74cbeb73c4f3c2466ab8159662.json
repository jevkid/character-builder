{"ast":null,"code":"import { call, put } from 'redux-saga/effects';\nimport { getAllRaces, getAllSubRaces, getAllClasses, getAllSubClasses } from '../../api';\nimport { commonActions } from '../slices/common';\nexport function* returnAllRaces() {\n  const response = yield call(getAllRaces);\n  yield put(commonActions.getAllRacesLoading());\n\n  if (response.data) {\n    yield put(commonActions.getAllRacesSuccess(response.data));\n  } else {\n    yield put(commonActions.getAllRacesFailure());\n  }\n}\nexport function* returnAllSubRaces() {\n  const response = yield call(getAllSubRaces);\n  yield put(commonActions.getAllSubRacesLoading());\n\n  if (response.data.results) {\n    yield put(commonActions.getAllSubRacesSuccess(response.data));\n  } else {\n    yield put(commonActions.getAllSubRacesFailure());\n  }\n}\nexport function* returnAllClasses() {\n  const response = yield call(getAllClasses);\n  yield put(commonActions.getAllClassesLoading());\n\n  if (response.data) {\n    yield put(commonActions.getAllClassesSuccess(response.data));\n  } else {\n    yield put(commonActions.getAllClassesFailure());\n  }\n}\nexport function* returnAllSubClasses() {\n  const response = yield call(getAllSubClasses);\n  yield put(commonActions.getAllSubClassesLoading());\n\n  if (response.data.results) {\n    yield put(commonActions.getAllSubClassesSuccess(response.data));\n  } else {\n    yield put(commonActions.getAllSubClassesFailure());\n  }\n}","map":{"version":3,"sources":["/Users/meganjevin/Desktop/Code/character-builder/src/store/sagas/common.ts"],"names":["call","put","getAllRaces","getAllSubRaces","getAllClasses","getAllSubClasses","commonActions","returnAllRaces","response","getAllRacesLoading","data","getAllRacesSuccess","getAllRacesFailure","returnAllSubRaces","getAllSubRacesLoading","results","getAllSubRacesSuccess","getAllSubRacesFailure","returnAllClasses","getAllClassesLoading","getAllClassesSuccess","getAllClassesFailure","returnAllSubClasses","getAllSubClassesLoading","getAllSubClassesSuccess","getAllSubClassesFailure"],"mappings":"AACA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,aAAtC,EAAqDC,gBAArD,QAA6E,WAA7E;AAEA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,OAAO,UAAUC,cAAV,GAA2B;AAChC,QAAMC,QAA4C,GAAG,MAAMR,IAAI,CAACE,WAAD,CAA/D;AACA,QAAMD,GAAG,CAACK,aAAa,CAACG,kBAAd,EAAD,CAAT;;AAEA,MAAID,QAAQ,CAACE,IAAb,EAAmB;AACjB,UAAMT,GAAG,CAACK,aAAa,CAACK,kBAAd,CAAiCH,QAAQ,CAACE,IAA1C,CAAD,CAAT;AACD,GAFD,MAEO;AACL,UAAMT,GAAG,CAACK,aAAa,CAACM,kBAAd,EAAD,CAAT;AACD;AACF;AAED,OAAO,UAAUC,iBAAV,GAA8B;AACnC,QAAML,QAA+C,GAAG,MAAMR,IAAI,CAACG,cAAD,CAAlE;AACA,QAAMF,GAAG,CAACK,aAAa,CAACQ,qBAAd,EAAD,CAAT;;AAEA,MAAIN,QAAQ,CAACE,IAAT,CAAcK,OAAlB,EAA2B;AACzB,UAAMd,GAAG,CAACK,aAAa,CAACU,qBAAd,CAAoCR,QAAQ,CAACE,IAA7C,CAAD,CAAT;AACD,GAFD,MAEO;AACL,UAAMT,GAAG,CAACK,aAAa,CAACW,qBAAd,EAAD,CAAT;AACD;AACF;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAClC,QAAMV,QAA8C,GAAG,MAAMR,IAAI,CAACI,aAAD,CAAjE;AACA,QAAMH,GAAG,CAACK,aAAa,CAACa,oBAAd,EAAD,CAAT;;AAEA,MAAIX,QAAQ,CAACE,IAAb,EAAmB;AACjB,UAAMT,GAAG,CAACK,aAAa,CAACc,oBAAd,CAAmCZ,QAAQ,CAACE,IAA5C,CAAD,CAAT;AACD,GAFD,MAEO;AACL,UAAMT,GAAG,CAACK,aAAa,CAACe,oBAAd,EAAD,CAAT;AACD;AACF;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMd,QAAiD,GAAG,MAAMR,IAAI,CAACK,gBAAD,CAApE;AACA,QAAMJ,GAAG,CAACK,aAAa,CAACiB,uBAAd,EAAD,CAAT;;AAEA,MAAIf,QAAQ,CAACE,IAAT,CAAcK,OAAlB,EAA2B;AACzB,UAAMd,GAAG,CAACK,aAAa,CAACkB,uBAAd,CAAsChB,QAAQ,CAACE,IAA/C,CAAD,CAAT;AACD,GAFD,MAEO;AACL,UAAMT,GAAG,CAACK,aAAa,CAACmB,uBAAd,EAAD,CAAT;AACD;AACF","sourcesContent":["import { AxiosResponse } from 'axios';\nimport { call, put } from 'redux-saga/effects';\nimport { getAllRaces, getAllSubRaces, getAllClasses, getAllSubClasses } from '../../api';\nimport { APIAllRacesResponse, APIAllSubRacesResponse, APIAllClassesResponse, APIAllSubClassesResponse } from '../../api/types';\nimport { commonActions } from '../slices/common';\n\nexport function* returnAllRaces() {\n  const response: AxiosResponse<APIAllRacesResponse> = yield call(getAllRaces);\n  yield put(commonActions.getAllRacesLoading());\n\n  if (response.data) {\n    yield put(commonActions.getAllRacesSuccess(response.data));\n  } else {\n    yield put(commonActions.getAllRacesFailure());\n  }\n}\n\nexport function* returnAllSubRaces() {\n  const response: AxiosResponse<APIAllSubRacesResponse> = yield call(getAllSubRaces);\n  yield put(commonActions.getAllSubRacesLoading());\n\n  if (response.data.results) {\n    yield put(commonActions.getAllSubRacesSuccess(response.data));\n  } else {\n    yield put(commonActions.getAllSubRacesFailure());\n  }\n}\n\nexport function* returnAllClasses() {\n  const response: AxiosResponse<APIAllClassesResponse> = yield call(getAllClasses);\n  yield put(commonActions.getAllClassesLoading());\n\n  if (response.data) {\n    yield put(commonActions.getAllClassesSuccess(response.data));\n  } else {\n    yield put(commonActions.getAllClassesFailure());\n  }\n}\n\nexport function* returnAllSubClasses() {\n  const response: AxiosResponse<APIAllSubClassesResponse> = yield call(getAllSubClasses);\n  yield put(commonActions.getAllSubClassesLoading());\n\n  if (response.data.results) {\n    yield put(commonActions.getAllSubClassesSuccess(response.data));\n  } else {\n    yield put(commonActions.getAllSubClassesFailure());\n  }\n}\n"]},"metadata":{},"sourceType":"module"}