{"ast":null,"code":"var _jsxFileName = \"/Users/meganjevin/Desktop/Code/character-builder/src/app/pages/characterBuilder.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport styled from 'styled-components';\nimport { useAppDispatch } from '../../helpers/hooks';\nimport { commonActions } from '../../store/slices/common';\nimport { useAllRaces } from '../../store/selectors/common';\nimport { TEXT_COLOR_PRIMARY } from '../styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledCharacterBuilderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  color: ${TEXT_COLOR_PRIMARY};\n`;\n_c = StyledCharacterBuilderContainer;\nconst StyledCharacterBuilderTitle = styled.h1`\n  text-align: center;\n`;\n_c2 = StyledCharacterBuilderTitle;\nconst StyledCharacterBuilderTitleContainer = styled.h1`\n  text-align: center;\n  margin-bottom: 32px;\n`;\n_c3 = StyledCharacterBuilderTitleContainer;\nconst StyledStepsContainer = styled.div``;\n_c4 = StyledStepsContainer;\nconst StyledStepsHeader = styled.h2`\n  text-align: center;\n`;\n_c5 = StyledStepsHeader;\nconst StyledStepsSubheader = styled.h4`\n  text-align: center;\n`;\n_c6 = StyledStepsSubheader;\nconst StyledSelect = styled.select`\n  width: 200px;\n  height: 30px;\n  border-radius: 5px;\n`;\n_c7 = StyledSelect;\nconst StyledRandomiseButton = styled.a`\n  font-size: inherit;\n  text-decoration: underline;\n  color: ${TEXT_COLOR_PRIMARY};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n_c8 = StyledRandomiseButton;\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c9 = StyledForm;\n// When page loads, animate into character builder component\n// When page loads, make a request to the API to get back all races\nexport const CharacterBuilder = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const allRaces = useAllRaces();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  const [selectedRace, setSelectedRace] = React.useState('');\n  React.useEffect(() => {\n    dispatch(commonActions.getAllRaces());\n    console.log(allRaces);\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(StyledCharacterBuilderContainer, {\n    children: [/*#__PURE__*/_jsxDEV(StyledCharacterBuilderTitleContainer, {\n      children: /*#__PURE__*/_jsxDEV(StyledCharacterBuilderTitle, {\n        children: \"Character builder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledStepsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(StyledStepsHeader, {\n        children: \"Step One: Race\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledStepsSubheader, {\n        children: [\"Select a race or\", ' ', /*#__PURE__*/_jsxDEV(StyledRandomiseButton, {\n          children: \"randomise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledForm, {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(StyledSelect, {\n          defaultValue: \"test\",\n          ...register('race'),\n          onChange: e => {\n            setSelectedRace(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            selected: true,\n            disabled: true,\n            children: \"- - - -\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), allRaces && allRaces.map(race => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: race.name\n          }, race.index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), errors.raceRequired && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CharacterBuilder, \"joeMCkv0xFb8+rMSwsqy/xEEbkc=\", false, function () {\n  return [useAppDispatch, useAllRaces, useForm];\n});\n\n_c10 = CharacterBuilder;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"StyledCharacterBuilderContainer\");\n$RefreshReg$(_c2, \"StyledCharacterBuilderTitle\");\n$RefreshReg$(_c3, \"StyledCharacterBuilderTitleContainer\");\n$RefreshReg$(_c4, \"StyledStepsContainer\");\n$RefreshReg$(_c5, \"StyledStepsHeader\");\n$RefreshReg$(_c6, \"StyledStepsSubheader\");\n$RefreshReg$(_c7, \"StyledSelect\");\n$RefreshReg$(_c8, \"StyledRandomiseButton\");\n$RefreshReg$(_c9, \"StyledForm\");\n$RefreshReg$(_c10, \"CharacterBuilder\");","map":{"version":3,"sources":["/Users/meganjevin/Desktop/Code/character-builder/src/app/pages/characterBuilder.tsx"],"names":["React","useForm","styled","useAppDispatch","commonActions","useAllRaces","TEXT_COLOR_PRIMARY","StyledCharacterBuilderContainer","div","StyledCharacterBuilderTitle","h1","StyledCharacterBuilderTitleContainer","StyledStepsContainer","StyledStepsHeader","h2","StyledStepsSubheader","h4","StyledSelect","select","StyledRandomiseButton","a","StyledForm","form","CharacterBuilder","dispatch","allRaces","register","handleSubmit","formState","errors","onSubmit","data","console","log","selectedRace","setSelectedRace","useState","useEffect","getAllRaces","e","target","value","map","race","name","index","raceRequired"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport styled from 'styled-components';\nimport { useAppDispatch } from '../../helpers/hooks';\nimport { commonActions } from '../../store/slices/common';\nimport { useAllRaces } from '../../store/selectors/common';\nimport { TEXT_COLOR_PRIMARY } from '../styles';\n\nconst StyledCharacterBuilderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  color: ${TEXT_COLOR_PRIMARY};\n`;\n\nconst StyledCharacterBuilderTitle = styled.h1`\n  text-align: center;\n`;\n\nconst StyledCharacterBuilderTitleContainer = styled.h1`\n  text-align: center;\n  margin-bottom: 32px;\n`;\n\nconst StyledStepsContainer = styled.div``;\n\nconst StyledStepsHeader = styled.h2`\n  text-align: center;\n`;\n\nconst StyledStepsSubheader = styled.h4`\n  text-align: center;\n`;\n\nconst StyledSelect = styled.select`\n  width: 200px;\n  height: 30px;\n  border-radius: 5px;\n`;\n\nconst StyledRandomiseButton = styled.a`\n  font-size: inherit;\n  text-decoration: underline;\n  color: ${TEXT_COLOR_PRIMARY};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\ntype Inputs = {\n  race: string;\n  raceRequired: string;\n};\n\n// When page loads, animate into character builder component\n// When page loads, make a request to the API to get back all races\n\nexport const CharacterBuilder: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const allRaces = useAllRaces();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<Inputs>();\n  const onSubmit: SubmitHandler<Inputs> = (data) => console.log(data);\n  const [selectedRace, setSelectedRace] = React.useState<string>('');\n\n  React.useEffect(() => {\n    dispatch(commonActions.getAllRaces());\n    console.log(allRaces);\n  }, [dispatch]);\n\n  return (\n    <StyledCharacterBuilderContainer>\n      <StyledCharacterBuilderTitleContainer>\n        <StyledCharacterBuilderTitle>\n          Character builder\n        </StyledCharacterBuilderTitle>\n      </StyledCharacterBuilderTitleContainer>\n      <StyledStepsContainer>\n        <StyledStepsHeader>Step One: Race</StyledStepsHeader>\n        <StyledStepsSubheader>\n          Select a race or{' '}\n          <StyledRandomiseButton>randomise</StyledRandomiseButton>\n        </StyledStepsSubheader>\n        <StyledForm onSubmit={handleSubmit(onSubmit)}>\n          {/* register your input into the hook by invoking the \"register\" function */}\n          <StyledSelect\n            defaultValue=\"test\"\n            {...register('race')}\n            onChange={(e) => {\n              setSelectedRace(e.target.value);\n            }}\n          >\n            <option value=\"\" selected disabled>\n              - - - -\n            </option>\n            {allRaces &&\n              allRaces.map((race) => (\n                <option key={race.index}>{race.name}</option>\n              ))}\n          </StyledSelect>\n          {/* errors will return when field validation fails  */}\n          {errors.raceRequired && <span>This field is required</span>}\n        </StyledForm>\n      </StyledStepsContainer>\n    </StyledCharacterBuilderContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}