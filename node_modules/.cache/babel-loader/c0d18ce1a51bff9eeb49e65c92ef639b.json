{"ast":null,"code":"var _jsxFileName = \"/Users/meganjevin/Desktop/Code/character-builder/src/app/components/race.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useFormikContext } from 'formik';\nimport { useAppDispatch } from '../../helpers/hooks';\nimport { commonActions } from '../../store/slices/common';\nimport { useAllRaces, useDetailedRace } from '../../store/selectors/common';\nimport { StyledContainer, StyledStepsHeader, StyledDetailHeader, StyledStepsSubheader, StyledSelect, StyledRandomiseButton, StyledStepContainer, StyledDetails, StyledP, StyledList, StyledListItem, StyledButtonContainer, StyledStepButton } from '../styles';\nimport { handleRandomise } from '../../helpers/randomise';\nimport { AbilityMapEnum } from '../../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Race = props => {\n  _s();\n\n  var _allRaces$results;\n\n  const dispatch = useAppDispatch();\n  const allRaces = useAllRaces();\n  const {\n    values\n  } = useFormikContext();\n  const selectedRace = values.race;\n  const selectedSubRace = values.subRace;\n  const detailedRace = useDetailedRace();\n  const [allSubRaces, setAllSubRaces] = React.useState([]);\n  const [displayRaceDetails, setDisplayRaceDetails] = React.useState(false); // Need to set this to state so that it is accessible anywhere\n\n  const handleSelectedSubRace = index => {\n    const selectedSubRace = allSubRaces === null || allSubRaces === void 0 ? void 0 : allSubRaces.filter(subRace => subRace.index === index);\n\n    if (selectedSubRace && selectedSubRace.length > 0) {// props.setFieldValue('subRace', selectedSubRace[0].index);\n    }\n  };\n\n  const handleRandomRace = () => {\n    if (allRaces === null || allRaces === void 0 ? void 0 : allRaces.results) {\n      const randomRace = handleRandomise(allRaces === null || allRaces === void 0 ? void 0 : allRaces.results); // props.setFieldValue('race', randomRace.index);\n\n      dispatch(commonActions.getRaceDetails({\n        index: randomRace.index\n      }));\n    }\n  };\n\n  const handleSelectedRace = index => {\n    const selectedRace = allRaces === null || allRaces === void 0 ? void 0 : allRaces.results.filter(race => race.index === index);\n\n    if (selectedRace && selectedRace.length > 0) {\n      // props.setFieldValue('race', selectedRace[0].index);\n      dispatch(commonActions.getRaceDetails({\n        index: selectedRace[0].index\n      }));\n    }\n  };\n\n  React.useEffect(() => {\n    dispatch(commonActions.getAllRaces());\n  }, [dispatch]);\n  React.useEffect(() => {\n    if (detailedRace === null || detailedRace === void 0 ? void 0 : detailedRace.subraces) {\n      setAllSubRaces(detailedRace === null || detailedRace === void 0 ? void 0 : detailedRace.subraces);\n      setDisplayRaceDetails(true);\n    } // from here, we need to get the subraces object from the detailed race response and use that to populate the subraces dropdown\n\n  }, [detailedRace]);\n  return /*#__PURE__*/_jsxDEV(StyledStepContainer, {\n    children: [/*#__PURE__*/_jsxDEV(StyledContainer, {\n      children: [/*#__PURE__*/_jsxDEV(StyledStepsHeader, {\n        children: \"Step One: Race\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledStepsSubheader, {\n        children: [\"Select a race or\", ' ', /*#__PURE__*/_jsxDEV(StyledRandomiseButton, {\n          onClick: () => handleRandomRace(),\n          children: \"randomise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), ' ', \"it.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledSelect, {\n        component: \"select\",\n        value: selectedRace,\n        name: \"race\",\n        onChange: e => {\n          handleSelectedRace(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"- - - -\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), allRaces && (allRaces === null || allRaces === void 0 ? void 0 : (_allRaces$results = allRaces.results) === null || _allRaces$results === void 0 ? void 0 : _allRaces$results.map(race => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: race.index,\n          children: race.name\n        }, race.index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), allSubRaces && allSubRaces.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(StyledStepsSubheader, {\n          children: \"Select a subrace.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StyledSelect, {\n          component: \"select\",\n          value: selectedSubRace,\n          name: \"subRace\",\n          onChange: e => {\n            handleSelectedSubRace(e.target.value);\n          },\n          children: allSubRaces.map(subRace => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: subRace.index,\n            children: subRace.name\n          }, subRace.index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(StyledButtonContainer, {\n        children: /*#__PURE__*/_jsxDEV(StyledStepButton, {\n          onClick: props.handleStepForward,\n          disabled: !selectedRace,\n          children: \"Next: Class \\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), detailedRace && displayRaceDetails && /*#__PURE__*/_jsxDEV(StyledDetails, {\n      children: [/*#__PURE__*/_jsxDEV(StyledDetailHeader, {\n        children: detailedRace.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledP, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Ability score increase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledList, {\n        children: detailedRace.ability_bonuses.map(bonus => /*#__PURE__*/_jsxDEV(StyledListItem, {\n          children: [\"Your \", AbilityMapEnum[bonus.ability_score.name], \" score increases by \", bonus.bonus, ' ']\n        }, bonus.ability_score.index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledP, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), \": \", detailedRace.age]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledP, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Alignment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), \": \", detailedRace.alignment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledP, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Size\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), \": \", detailedRace.size, \" -\", ' ', detailedRace.size_description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledP, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Speed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), \": \", detailedRace.speed]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), detailedRace.traits.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(StyledP, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Traits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(StyledList, {\n          children: detailedRace.traits.map(trait => /*#__PURE__*/_jsxDEV(StyledListItem, {\n            children: trait.name\n          }, trait.index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(StyledP, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Languages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), \": \", detailedRace.language_desc]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledList, {\n        children: detailedRace.languages.map(language => /*#__PURE__*/_jsxDEV(StyledListItem, {\n          children: language.name\n        }, language.index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), detailedRace.starting_proficiencies.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(StyledP, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Starting proficiences\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(StyledList, {\n          children: detailedRace.starting_proficiencies.map(item => /*#__PURE__*/_jsxDEV(StyledListItem, {\n            children: item.name\n          }, item.index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Race, \"hi6rPrg4sgenNlLav0bCYwf6jLg=\", false, function () {\n  return [useAppDispatch, useAllRaces, useFormikContext, useDetailedRace];\n});\n\n_c = Race;\n\nvar _c;\n\n$RefreshReg$(_c, \"Race\");","map":{"version":3,"sources":["/Users/meganjevin/Desktop/Code/character-builder/src/app/components/race.tsx"],"names":["React","useFormikContext","useAppDispatch","commonActions","useAllRaces","useDetailedRace","StyledContainer","StyledStepsHeader","StyledDetailHeader","StyledStepsSubheader","StyledSelect","StyledRandomiseButton","StyledStepContainer","StyledDetails","StyledP","StyledList","StyledListItem","StyledButtonContainer","StyledStepButton","handleRandomise","AbilityMapEnum","Race","props","dispatch","allRaces","values","selectedRace","race","selectedSubRace","subRace","detailedRace","allSubRaces","setAllSubRaces","useState","displayRaceDetails","setDisplayRaceDetails","handleSelectedSubRace","index","filter","length","handleRandomRace","results","randomRace","getRaceDetails","handleSelectedRace","useEffect","getAllRaces","subraces","e","target","value","map","name","handleStepForward","ability_bonuses","bonus","ability_score","age","alignment","size","size_description","speed","traits","trait","language_desc","languages","language","starting_proficiencies","item"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useFormikContext } from 'formik';\nimport { useAppDispatch } from '../../helpers/hooks';\nimport { commonActions } from '../../store/slices/common';\nimport { useAllRaces, useDetailedRace } from '../../store/selectors/common';\nimport {\n  StyledContainer,\n  StyledStepsHeader,\n  StyledDetailHeader,\n  StyledStepsSubheader,\n  StyledSelect,\n  StyledRandomiseButton,\n  StyledStepContainer,\n  StyledDetails,\n  StyledP,\n  StyledList,\n  StyledListItem,\n  StyledButtonContainer,\n  StyledStepButton,\n} from '../styles';\nimport { handleRandomise } from '../../helpers/randomise';\nimport {\n  AbilityMapEnum,\n  CommonModel,\n  FormInputs,\n  GenericComponentProps,\n} from '../../types';\n\nexport const Race: React.FC<GenericComponentProps> = (props) => {\n  const dispatch = useAppDispatch();\n  const allRaces = useAllRaces();\n  const { values } = useFormikContext<FormInputs>();\n  const selectedRace = values.race;\n  const selectedSubRace = values.subRace;\n  const detailedRace = useDetailedRace();\n  const [allSubRaces, setAllSubRaces] = React.useState<\n    CommonModel[] | undefined\n  >([]);\n  const [displayRaceDetails, setDisplayRaceDetails] = React.useState(false);\n\n  // Need to set this to state so that it is accessible anywhere\n  const handleSelectedSubRace = (index: string) => {\n    const selectedSubRace = allSubRaces?.filter(\n      (subRace) => subRace.index === index\n    );\n    if (selectedSubRace && selectedSubRace.length > 0) {\n      // props.setFieldValue('subRace', selectedSubRace[0].index);\n    }\n  };\n\n  const handleRandomRace = () => {\n    if (allRaces?.results) {\n      const randomRace = handleRandomise(allRaces?.results);\n      // props.setFieldValue('race', randomRace.index);\n      dispatch(commonActions.getRaceDetails({ index: randomRace.index }));\n    }\n  };\n\n  const handleSelectedRace = (index: string) => {\n    const selectedRace = allRaces?.results.filter(\n      (race) => race.index === index\n    );\n    if (selectedRace && selectedRace.length > 0) {\n      // props.setFieldValue('race', selectedRace[0].index);\n      dispatch(commonActions.getRaceDetails({ index: selectedRace[0].index }));\n    }\n  };\n\n  React.useEffect(() => {\n    dispatch(commonActions.getAllRaces());\n  }, [dispatch]);\n\n  React.useEffect(() => {\n    if (detailedRace?.subraces) {\n      setAllSubRaces(detailedRace?.subraces);\n      setDisplayRaceDetails(true);\n    }\n    // from here, we need to get the subraces object from the detailed race response and use that to populate the subraces dropdown\n  }, [detailedRace]);\n\n  return (\n    <StyledStepContainer>\n      <StyledContainer>\n        <StyledStepsHeader>Step One: Race</StyledStepsHeader>\n        <StyledStepsSubheader>\n          Select a race or{' '}\n          <StyledRandomiseButton onClick={() => handleRandomRace()}>\n            randomise\n          </StyledRandomiseButton>{' '}\n          it.\n        </StyledStepsSubheader>\n        <StyledSelect\n          component=\"select\"\n          value={selectedRace}\n          name=\"race\"\n          onChange={(e: any) => {\n            handleSelectedRace(e.target.value);\n          }}\n        >\n          <option value=\"\" disabled>\n            - - - -\n          </option>\n          {allRaces &&\n            allRaces?.results?.map((race) => (\n              <option key={race.index} value={race.index}>\n                {race.name}\n              </option>\n            ))}\n        </StyledSelect>\n\n        {allSubRaces && allSubRaces.length > 0 && (\n          <>\n            <StyledStepsSubheader>Select a subrace.</StyledStepsSubheader>\n            <StyledSelect\n              component=\"select\"\n              value={selectedSubRace}\n              name=\"subRace\"\n              onChange={(e: any) => {\n                handleSelectedSubRace(e.target.value);\n              }}\n            >\n              {allSubRaces.map((subRace) => (\n                <option key={subRace.index} value={subRace.index}>\n                  {subRace.name}\n                </option>\n              ))}\n            </StyledSelect>\n          </>\n        )}\n        <StyledButtonContainer>\n          <StyledStepButton\n            onClick={props.handleStepForward}\n            disabled={!selectedRace}\n          >\n            Next: Class &#8594;\n          </StyledStepButton>\n        </StyledButtonContainer>\n      </StyledContainer>\n      {detailedRace && displayRaceDetails && (\n        <StyledDetails>\n          <StyledDetailHeader>{detailedRace.name}</StyledDetailHeader>\n          <StyledP>\n            <strong>Ability score increase</strong>:\n          </StyledP>\n          <StyledList>\n            {detailedRace.ability_bonuses.map((bonus) => (\n              <StyledListItem key={bonus.ability_score.index}>\n                Your {AbilityMapEnum[bonus.ability_score.name]} score increases\n                by {bonus.bonus}{' '}\n              </StyledListItem>\n            ))}\n          </StyledList>\n          <StyledP>\n            <strong>Age</strong>: {detailedRace.age}\n          </StyledP>\n          <StyledP>\n            <strong>Alignment</strong>: {detailedRace.alignment}\n          </StyledP>\n          <StyledP>\n            <strong>Size</strong>: {detailedRace.size} -{' '}\n            {detailedRace.size_description}\n          </StyledP>\n          <StyledP>\n            <strong>Speed</strong>: {detailedRace.speed}\n          </StyledP>\n          {detailedRace.traits.length > 0 && (\n            <>\n              <StyledP>\n                <strong>Traits</strong>:\n              </StyledP>\n              <StyledList>\n                {detailedRace.traits.map((trait) => (\n                  <StyledListItem key={trait.index}>\n                    {trait.name}\n                  </StyledListItem>\n                ))}\n              </StyledList>\n            </>\n          )}\n          <StyledP>\n            <strong>Languages</strong>: {detailedRace.language_desc}\n          </StyledP>\n          <StyledList>\n            {detailedRace.languages.map((language) => (\n              <StyledListItem key={language.index}>\n                {language.name}\n              </StyledListItem>\n            ))}\n          </StyledList>\n          {detailedRace.starting_proficiencies.length > 0 && (\n            <>\n              <StyledP>\n                <strong>Starting proficiences</strong>:\n              </StyledP>\n              <StyledList>\n                {detailedRace.starting_proficiencies.map((item) => (\n                  <StyledListItem key={item.index}>{item.name}</StyledListItem>\n                ))}\n              </StyledList>\n            </>\n          )}\n        </StyledDetails>\n      )}\n    </StyledStepContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}