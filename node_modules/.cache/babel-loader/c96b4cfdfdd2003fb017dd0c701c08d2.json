{"ast":null,"code":"var _jsxFileName = \"/Users/meganjevin/Desktop/Code/character-builder/src/app/components/background.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useAppDispatch } from '../../helpers/hooks';\nimport { commonActions } from '../../store/slices/common';\nimport { useAllBackgrounds, useDetailedBackground } from '../../store/selectors/common';\nimport { StyledContainer, StyledStepsHeader, StyledStepsSubheader, StyledSelect, StyledRandomiseButton, StyledStepContainer, StyledButtonContainer, StyledStepButton } from '../styles';\nimport { handleRandomise } from '../../helpers/randomise';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Background = props => {\n  _s();\n\n  var _allBackgrounds$resul;\n\n  const dispatch = useAppDispatch();\n  const allBackgrounds = useAllBackgrounds();\n  const detailedBackground = useDetailedBackground();\n  const [selectedBackground, setSelectedBackground] = React.useState(undefined);\n  const [displayBackgroundDetails, setDisplayBackgroundDetails] = React.useState(false);\n\n  const handleRandomBackground = () => {\n    if (allBackgrounds === null || allBackgrounds === void 0 ? void 0 : allBackgrounds.results) {\n      const randomBackground = handleRandomise(allBackgrounds === null || allBackgrounds === void 0 ? void 0 : allBackgrounds.results);\n      setSelectedBackground({\n        index: randomBackground.index,\n        name: randomBackground.name\n      });\n      dispatch(commonActions.getBackgroundDetails({\n        index: randomBackground.index\n      }));\n    }\n  };\n\n  const handleSelectedBackground = index => {\n    const selectedBackground = allBackgrounds === null || allBackgrounds === void 0 ? void 0 : allBackgrounds.results.filter(item => item.index === index);\n\n    if (selectedBackground && selectedBackground.length > 0) {\n      setSelectedBackground({\n        index: selectedBackground[0].index,\n        name: selectedBackground[0].name\n      });\n      dispatch(commonActions.getBackgroundDetails({\n        index: selectedBackground[0].index\n      }));\n    }\n  };\n\n  React.useEffect(() => {\n    dispatch(commonActions.getAllBackgrounds());\n    console.log('allBackgrounds', allBackgrounds);\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(StyledStepContainer, {\n    children: /*#__PURE__*/_jsxDEV(StyledContainer, {\n      children: [/*#__PURE__*/_jsxDEV(StyledStepsHeader, {\n        children: \"Step Four: Background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledStepsSubheader, {\n        children: [\"Select a background or\", ' ', /*#__PURE__*/_jsxDEV(StyledRandomiseButton, {\n          onClick: () => handleRandomBackground(),\n          children: \"randomise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), ' ', \"it.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledSelect, {\n        value: selectedBackground === null || selectedBackground === void 0 ? void 0 : selectedBackground.index,\n        ...props.register('background'),\n        onChange: e => {\n          handleSelectedBackground(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"- - - -\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), allBackgrounds && (allBackgrounds === null || allBackgrounds === void 0 ? void 0 : (_allBackgrounds$resul = allBackgrounds.results) === null || _allBackgrounds$resul === void 0 ? void 0 : _allBackgrounds$resul.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.index,\n          children: item.name\n        }, item.index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), props.errors.class && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"This field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(StyledButtonContainer, {\n        children: [/*#__PURE__*/_jsxDEV(StyledStepButton, {\n          onClick: props.handleStepBack,\n          children: \"\\u2190 Previous: Ability scores\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledStepButton, {\n          onClick: props.handleStepForward,\n          children: \"Next: ? \\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Background, \"ZN2oQRRnJ1okWLVsaFw2X6GgXNg=\", false, function () {\n  return [useAppDispatch, useAllBackgrounds, useDetailedBackground];\n});\n\n_c = Background;\n\nvar _c;\n\n$RefreshReg$(_c, \"Background\");","map":{"version":3,"sources":["/Users/meganjevin/Desktop/Code/character-builder/src/app/components/background.tsx"],"names":["React","useAppDispatch","commonActions","useAllBackgrounds","useDetailedBackground","StyledContainer","StyledStepsHeader","StyledStepsSubheader","StyledSelect","StyledRandomiseButton","StyledStepContainer","StyledButtonContainer","StyledStepButton","handleRandomise","Background","props","dispatch","allBackgrounds","detailedBackground","selectedBackground","setSelectedBackground","useState","undefined","displayBackgroundDetails","setDisplayBackgroundDetails","handleRandomBackground","results","randomBackground","index","name","getBackgroundDetails","handleSelectedBackground","filter","item","length","useEffect","getAllBackgrounds","console","log","register","e","target","value","map","errors","class","handleStepBack","handleStepForward"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useAppDispatch } from '../../helpers/hooks';\nimport { commonActions } from '../../store/slices/common';\nimport {\n  useAllBackgrounds,\n  useDetailedBackground,\n} from '../../store/selectors/common';\nimport {\n  StyledContainer,\n  StyledStepsHeader,\n  StyledDetailHeader,\n  StyledStepsSubheader,\n  StyledSelect,\n  StyledRandomiseButton,\n  StyledStepContainer,\n  StyledDetails,\n  StyledP,\n  StyledList,\n  StyledListItem,\n  StyledButtonContainer,\n  StyledStepButton,\n  StyledRow,\n  StyledColumn,\n} from '../styles';\nimport { handleRandomise } from '../../helpers/randomise';\nimport { APIReference, GenericComponentProps } from '../../types';\n\nexport const Background: React.FC<GenericComponentProps> = (props) => {\n  const dispatch = useAppDispatch();\n  const allBackgrounds = useAllBackgrounds();\n  const detailedBackground = useDetailedBackground();\n  const [selectedBackground, setSelectedBackground] = React.useState<\n    APIReference | undefined\n  >(undefined);\n  const [displayBackgroundDetails, setDisplayBackgroundDetails] =\n    React.useState(false);\n\n  const handleRandomBackground = () => {\n    if (allBackgrounds?.results) {\n      const randomBackground = handleRandomise(allBackgrounds?.results);\n      setSelectedBackground({\n        index: randomBackground.index,\n        name: randomBackground.name,\n      });\n      dispatch(\n        commonActions.getBackgroundDetails({ index: randomBackground.index })\n      );\n    }\n  };\n\n  const handleSelectedBackground = (index: string) => {\n    const selectedBackground = allBackgrounds?.results.filter(\n      (item) => item.index === index\n    );\n    if (selectedBackground && selectedBackground.length > 0) {\n      setSelectedBackground({\n        index: selectedBackground[0].index,\n        name: selectedBackground[0].name,\n      });\n      dispatch(\n        commonActions.getBackgroundDetails({\n          index: selectedBackground[0].index,\n        })\n      );\n    }\n  };\n\n  React.useEffect(() => {\n    dispatch(commonActions.getAllBackgrounds());\n    console.log('allBackgrounds', allBackgrounds);\n  }, [dispatch]);\n\n  return (\n    <StyledStepContainer>\n      <StyledContainer>\n        <StyledStepsHeader>Step Four: Background</StyledStepsHeader>\n        <StyledStepsSubheader>\n          Select a background or{' '}\n          <StyledRandomiseButton onClick={() => handleRandomBackground()}>\n            randomise\n          </StyledRandomiseButton>{' '}\n          it.\n        </StyledStepsSubheader>\n        <StyledSelect\n          value={selectedBackground?.index}\n          {...props.register('background')}\n          onChange={(e) => {\n            handleSelectedBackground(e.target.value);\n          }}\n        >\n          <option value=\"\" disabled>\n            - - - -\n          </option>\n          {allBackgrounds &&\n            allBackgrounds?.results?.map((item) => (\n              <option key={item.index} value={item.index}>\n                {item.name}\n              </option>\n            ))}\n        </StyledSelect>\n\n        {props.errors.class && <span>This field is required</span>}\n        <StyledButtonContainer>\n          <StyledStepButton onClick={props.handleStepBack}>\n            &#8592; Previous: Ability scores\n          </StyledStepButton>\n          <StyledStepButton onClick={props.handleStepForward}>\n            Next: ? &#8594;\n          </StyledStepButton>\n        </StyledButtonContainer>\n      </StyledContainer>\n    </StyledStepContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}