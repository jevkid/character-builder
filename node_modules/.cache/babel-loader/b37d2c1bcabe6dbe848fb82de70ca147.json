{"ast":null,"code":"var _jsxFileName = \"/Users/meganjevin/Desktop/Code/character-builder/src/app/pages/characterBuilder.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport styled from 'styled-components';\nimport { useAppDispatch } from '../../helpers/hooks';\nimport { useAllSubRaces } from '../../store/selectors/common';\nimport { TEXT_COLOR_PRIMARY, TEXT_COLOR_SECONDARY } from '../styles';\nimport { Race } from '../components/race';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledCharacterBuilderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  color: ${TEXT_COLOR_PRIMARY};\n`;\n_c = StyledCharacterBuilderContainer;\nconst StyledCharacterBuilderTitle = styled.h1`\n  text-align: center;\n`;\n_c2 = StyledCharacterBuilderTitle;\nconst StyledCharacterBuilderTitleContainer = styled.div`\n  text-align: center;\n  margin-bottom: 32px;\n`;\n_c3 = StyledCharacterBuilderTitleContainer;\nconst StyledStepsContainer = styled.div``;\n_c4 = StyledStepsContainer;\nconst StyledRandomiseButton = styled.a`\n  font-size: inherit;\n  color: ${TEXT_COLOR_SECONDARY};\n  &:hover {\n    cursor: pointer;\n    color: ${TEXT_COLOR_PRIMARY};\n  }\n`;\n_c5 = StyledRandomiseButton;\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c6 = StyledForm;\nconst StyledP = styled.p`\n  margin: 12px 0;\n`;\n_c7 = StyledP;\nexport const CharacterBuilder = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const [displayRandom, setDisplayRandom] = React.useState(false);\n  const allSubRaces = useAllSubRaces(); // const allClasses = useAllClasses();\n  // const allSubClasses = useAllSubClasses();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => console.log(data); // const [selectedSubClass, setSelectedSubClass] = React.useState<\n  //   APIReference | undefined\n  // >(undefined);\n  // const handleSelectedSubClass = (index: string) => {\n  //   const selectedSubClass = allSubClasses?.results.filter(\n  //     (item) => item.index === index\n  //   );\n  //   if (selectedSubClass.length > 0) {\n  //     setSelectedSubClass({\n  //       index: selectedSubClass[0].index,\n  //       name: selectedSubClass[0].name,\n  //     });\n  //   }\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(StyledCharacterBuilderContainer, {\n    children: [/*#__PURE__*/_jsxDEV(StyledCharacterBuilderTitleContainer, {\n      children: [/*#__PURE__*/_jsxDEV(StyledCharacterBuilderTitle, {\n        children: \"Character builder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledP, {\n        children: [\"Build your character step by step or completely\", ' ', /*#__PURE__*/_jsxDEV(StyledRandomiseButton, {\n          children: \"randomise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), !displayRandom ? /*#__PURE__*/_jsxDEV(StyledStepsContainer, {\n      children: /*#__PURE__*/_jsxDEV(StyledForm, {\n        onSubmit: handleSubmit(onSubmit),\n        children: /*#__PURE__*/_jsxDEV(Race, {\n          register: register,\n          errors: errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Random\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CharacterBuilder, \"UXpe/kFt2+ydvE+RCHaTFGR4k4w=\", false, function () {\n  return [useAppDispatch, useAllSubRaces, useForm];\n});\n\n_c8 = CharacterBuilder;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"StyledCharacterBuilderContainer\");\n$RefreshReg$(_c2, \"StyledCharacterBuilderTitle\");\n$RefreshReg$(_c3, \"StyledCharacterBuilderTitleContainer\");\n$RefreshReg$(_c4, \"StyledStepsContainer\");\n$RefreshReg$(_c5, \"StyledRandomiseButton\");\n$RefreshReg$(_c6, \"StyledForm\");\n$RefreshReg$(_c7, \"StyledP\");\n$RefreshReg$(_c8, \"CharacterBuilder\");","map":{"version":3,"sources":["/Users/meganjevin/Desktop/Code/character-builder/src/app/pages/characterBuilder.tsx"],"names":["React","useForm","styled","useAppDispatch","useAllSubRaces","TEXT_COLOR_PRIMARY","TEXT_COLOR_SECONDARY","Race","StyledCharacterBuilderContainer","div","StyledCharacterBuilderTitle","h1","StyledCharacterBuilderTitleContainer","StyledStepsContainer","StyledRandomiseButton","a","StyledForm","form","StyledP","p","CharacterBuilder","dispatch","displayRandom","setDisplayRandom","useState","allSubRaces","register","handleSubmit","formState","errors","onSubmit","data","console","log"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAuC,iBAAvC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,cAAT,QAAiD,8BAAjD;AACA,SAASC,kBAAT,EAA6BC,oBAA7B,QAAyD,WAAzD;AACA,SAASC,IAAT,QAAqB,oBAArB;;AAGA,MAAMC,+BAA+B,GAAGN,MAAM,CAACO,GAAI;AACnD;AACA;AACA;AACA;AACA;AACA,WAAWJ,kBAAmB;AAC9B,CAPA;KAAMG,+B;AASN,MAAME,2BAA2B,GAAGR,MAAM,CAACS,EAAG;AAC9C;AACA,CAFA;MAAMD,2B;AAIN,MAAME,oCAAoC,GAAGV,MAAM,CAACO,GAAI;AACxD;AACA;AACA,CAHA;MAAMG,oC;AAKN,MAAMC,oBAAoB,GAAGX,MAAM,CAACO,GAAI,EAAxC;MAAMI,oB;AAEN,MAAMC,qBAAqB,GAAGZ,MAAM,CAACa,CAAE;AACvC;AACA,WAAWT,oBAAqB;AAChC;AACA;AACA,aAAaD,kBAAmB;AAChC;AACA,CAPA;MAAMS,qB;AASN,MAAME,UAAU,GAAGd,MAAM,CAACe,IAAK;AAC/B;AACA;AACA;AACA,CAJA;MAAMD,U;AAMN,MAAME,OAAO,GAAGhB,MAAM,CAACiB,CAAE;AACzB;AACA,CAFA;MAAMD,O;AAWN,OAAO,MAAME,gBAA0B,GAAG,MAAM;AAAA;;AAC9C,QAAMC,QAAQ,GAAGlB,cAAc,EAA/B;AACA,QAAM,CAACmB,aAAD,EAAgBC,gBAAhB,IAAoCvB,KAAK,CAACwB,QAAN,CAAe,KAAf,CAA1C;AACA,QAAMC,WAAW,GAAGrB,cAAc,EAAlC,CAH8C,CAI9C;AACA;;AACA,QAAM;AACJsB,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAHP,MAIF5B,OAAO,EAJX;;AAKA,QAAM6B,QAAmC,GAAIC,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAtD,CAX8C,CAY9C;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE,QAAC,+BAAD;AAAA,4BACE,QAAC,oCAAD;AAAA,8BACE,QAAC,2BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,OAAD;AAAA,sEACkD,GADlD,eAEE,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAUG,CAACT,aAAD,gBACC,QAAC,oBAAD;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAEK,YAAY,CAACG,QAAD,CAAlC;AAAA,+BAEE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEJ,QAAhB;AAA0B,UAAA,MAAM,EAAEG;AAAlC;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,gBAwEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuFD,CAnHM;;GAAMT,gB;UACMjB,c,EAEGC,c,EAOhBH,O;;;MAVOmB,gB","sourcesContent":["import * as React from 'react';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport styled from 'styled-components';\nimport { useAppDispatch } from '../../helpers/hooks';\nimport { useAllSubRaces, useAllSubClasses } from '../../store/selectors/common';\nimport { TEXT_COLOR_PRIMARY, TEXT_COLOR_SECONDARY } from '../styles';\nimport { Race } from '../components/race';\nimport { Subrace } from '../components/subrace';\n\nconst StyledCharacterBuilderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  color: ${TEXT_COLOR_PRIMARY};\n`;\n\nconst StyledCharacterBuilderTitle = styled.h1`\n  text-align: center;\n`;\n\nconst StyledCharacterBuilderTitleContainer = styled.div`\n  text-align: center;\n  margin-bottom: 32px;\n`;\n\nconst StyledStepsContainer = styled.div``;\n\nconst StyledRandomiseButton = styled.a`\n  font-size: inherit;\n  color: ${TEXT_COLOR_SECONDARY};\n  &:hover {\n    cursor: pointer;\n    color: ${TEXT_COLOR_PRIMARY};\n  }\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst StyledP = styled.p`\n  margin: 12px 0;\n`;\n\ninterface FormInputs {\n  race: string;\n  subRace: string;\n  class: string;\n  subClass: string;\n}\n\nexport const CharacterBuilder: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const [displayRandom, setDisplayRandom] = React.useState(false);\n  const allSubRaces = useAllSubRaces();\n  // const allClasses = useAllClasses();\n  // const allSubClasses = useAllSubClasses();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<FormInputs>();\n  const onSubmit: SubmitHandler<FormInputs> = (data) => console.log(data);\n  // const [selectedSubClass, setSelectedSubClass] = React.useState<\n  //   APIReference | undefined\n  // >(undefined);\n\n  // const handleSelectedSubClass = (index: string) => {\n  //   const selectedSubClass = allSubClasses?.results.filter(\n  //     (item) => item.index === index\n  //   );\n  //   if (selectedSubClass.length > 0) {\n  //     setSelectedSubClass({\n  //       index: selectedSubClass[0].index,\n  //       name: selectedSubClass[0].name,\n  //     });\n  //   }\n  // };\n\n  return (\n    <StyledCharacterBuilderContainer>\n      <StyledCharacterBuilderTitleContainer>\n        <StyledCharacterBuilderTitle>\n          Character builder\n        </StyledCharacterBuilderTitle>\n        <StyledP>\n          Build your character step by step or completely{' '}\n          <StyledRandomiseButton>randomise</StyledRandomiseButton>.\n        </StyledP>\n      </StyledCharacterBuilderTitleContainer>\n      {!displayRandom ? (\n        <StyledStepsContainer>\n          <StyledForm onSubmit={handleSubmit(onSubmit)}>\n            {/* Select a race */}\n            <Race register={register} errors={errors} />\n            {/* {allClasses && allClasses.results.length > 0 && (\n              <StyledStep>\n                <StyledStepsHeader>Step Two: Class</StyledStepsHeader>\n                <StyledStepsSubheader>\n                  Select a class or{' '}\n                  <StyledRandomiseButton onClick={() => handleRandomRace()}>\n                    randomise\n                  </StyledRandomiseButton>{' '}\n                  it.\n                </StyledStepsSubheader>\n                <StyledSelect\n                  value={selectedClass?.name}\n                  {...register('class')}\n                  onChange={(e) => {\n                    handleSelectedClass(e.target.value);\n                  }}\n                >\n                  <option value=\"\" selected disabled>\n                    - - - -\n                  </option>\n                  {allClasses &&\n                    allClasses.results.map((item) => (\n                      <option key={item.index} value={item.index}>\n                        {item.name}\n                      </option>\n                    ))}\n                </StyledSelect>\n\n                {errors.class && <span>This field is required</span>}\n              </StyledStep>\n            )} */}\n            {/* Select a subclass */}\n            {/* {allSubClasses && allSubClasses.results.length > 0 && (\n              <StyledStep>\n                <StyledStepsSubheader>\n                  Select a subclass or{' '}\n                  <StyledRandomiseButton onClick={() => handleRandomRace()}>\n                    randomise\n                  </StyledRandomiseButton>{' '}\n                  it.\n                </StyledStepsSubheader>\n                <StyledSelect\n                  value={selectedSubClass?.name}\n                  {...register('subClass')}\n                  onChange={(e) => {\n                    handleSelectedSubClass(e.target.value);\n                  }}\n                >\n                  <option value=\"\" selected disabled>\n                    - - - -\n                  </option>\n                  {allSubClasses &&\n                    allSubClasses.results.map((item) => (\n                      <option key={item.index} value={item.index}>\n                        {item.name}\n                      </option>\n                    ))}\n                </StyledSelect>\n\n                {errors.class && <span>This field is required</span>}\n              </StyledStep> */}\n            {/* )} */}\n            {/* Set ability scores */}\n            {/* Select a background */}\n          </StyledForm>\n        </StyledStepsContainer>\n      ) : (\n        <h2>Random</h2>\n      )}\n    </StyledCharacterBuilderContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}