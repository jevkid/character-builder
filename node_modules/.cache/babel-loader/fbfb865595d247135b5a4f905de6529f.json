{"ast":null,"code":"var _jsxFileName = \"/Users/meganjevin/Desktop/Code/character-builder/src/app/pages/characterBuilder.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport styled from 'styled-components';\nimport { useAppDispatch } from '../../helpers/hooks';\nimport { commonActions } from '../../store/slices/common';\nimport { useAllRaces, useAllRacesError, useAllRacesLoading, useDetailedRace, useAllSubRaces } from '../../store/selectors/common';\nimport { TEXT_COLOR_PRIMARY, TEXT_COLOR_SECONDARY } from '../styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledCharacterBuilderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  color: ${TEXT_COLOR_PRIMARY};\n`;\n_c = StyledCharacterBuilderContainer;\nconst StyledCharacterBuilderTitle = styled.h1`\n  text-align: center;\n`;\n_c2 = StyledCharacterBuilderTitle;\nconst StyledCharacterBuilderTitleContainer = styled.div`\n  text-align: center;\n  margin-bottom: 32px;\n`;\n_c3 = StyledCharacterBuilderTitleContainer;\nconst StyledStepsContainer = styled.div``;\n_c4 = StyledStepsContainer;\nconst StyledStep = styled.div`\n  text-align: center;\n`;\n_c5 = StyledStep;\nconst StyledStepsHeader = styled.h3`\n  text-align: center;\n  margin: 12px 0;\n`;\n_c6 = StyledStepsHeader;\nconst StyledStepsSubheader = styled.h5`\n  text-align: center;\n  margin: 12px 0;\n`;\n_c7 = StyledStepsSubheader;\nconst StyledSelect = styled.select`\n  width: 200px;\n  height: 30px;\n  border-radius: 5px;\n  margin: 12px 0;\n`;\n_c8 = StyledSelect;\nconst StyledRandomiseButton = styled.a`\n  font-size: inherit;\n  color: ${TEXT_COLOR_SECONDARY};\n  &:hover {\n    cursor: pointer;\n    color: ${TEXT_COLOR_PRIMARY};\n  }\n`;\n_c9 = StyledRandomiseButton;\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c10 = StyledForm;\nconst StyledP = styled.p`\n  margin: 12px 0;\n`;\n_c11 = StyledP;\nexport const CharacterBuilder = () => {\n  _s();\n\n  var _allRaces$results;\n\n  const dispatch = useAppDispatch();\n  const [displayRandom, setDisplayRandom] = React.useState(false);\n  const allRaces = useAllRaces();\n  const allRacesLoading = useAllRacesLoading();\n  const allRacesError = useAllRacesError();\n  const detailedRace = useDetailedRace();\n  const allSubRaces = useAllSubRaces(); // const allClasses = useAllClasses();\n  // const allSubClasses = useAllSubClasses();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  const [selectedRace, setSelectedRace] = React.useState(undefined);\n  const [selectedSubRace, setSelectedSubRace] = React.useState(undefined); // const [selectedClass, setSelectedClass] = React.useState<\n  //   APIReference | undefined\n  // >(undefined);\n  // const [selectedSubClass, setSelectedSubClass] = React.useState<\n  //   APIReference | undefined\n  // >(undefined);\n\n  const getRandomInt = maxInt => {\n    return Math.floor(Math.random() * maxInt);\n  };\n\n  const handleRandomise = arr => {\n    const randomInt = getRandomInt(arr.length);\n    return arr[randomInt];\n  };\n\n  const handleRandomRace = () => {\n    const randomRace = handleRandomise(allRaces === null || allRaces === void 0 ? void 0 : allRaces.results);\n    setSelectedRace({\n      index: randomRace.index,\n      name: randomRace.name\n    });\n  };\n\n  const handleSelectedRace = index => {\n    const selectedRace = allRaces === null || allRaces === void 0 ? void 0 : allRaces.results.filter(race => race.index === index);\n\n    if (selectedRace.length > 0) {\n      setSelectedRace({\n        index: selectedRace[0].index,\n        name: selectedRace[0].name\n      });\n    }\n  };\n\n  const handleSelectedSubRace = index => {\n    const selectedSubRace = allSubRaces === null || allSubRaces === void 0 ? void 0 : allSubRaces.results.filter(subRace => subRace.index === index);\n\n    if (selectedSubRace.length > 0) {\n      setSelectedSubRace({\n        index: selectedSubRace[0].index,\n        name: selectedSubRace[0].name\n      });\n    }\n  }; // const handleSelectedClass = (index: string) => {\n  //   const selectedClass = allClasses?.results.filter(\n  //     (item) => item.index === index\n  //   );\n  //   if (selectedClass.length > 0) {\n  //     setSelectedClass({\n  //       index: selectedClass[0].index,\n  //       name: selectedClass[0].name,\n  //     });\n  //   }\n  // };\n  // const handleSelectedSubClass = (index: string) => {\n  //   const selectedSubClass = allSubClasses?.results.filter(\n  //     (item) => item.index === index\n  //   );\n  //   if (selectedSubClass.length > 0) {\n  //     setSelectedSubClass({\n  //       index: selectedSubClass[0].index,\n  //       name: selectedSubClass[0].name,\n  //     });\n  //   }\n  // };\n\n\n  React.useEffect(() => {\n    dispatch(commonActions.getAllRaces());\n  }, []);\n  React.useEffect(() => {\n    if (selectedRace) {\n      dispatch(commonActions.getRaceDetails({\n        index: selectedRace.index\n      }));\n    } // console.log(detailedRace);\n\n  }, [selectedRace]);\n  return /*#__PURE__*/_jsxDEV(StyledCharacterBuilderContainer, {\n    children: [/*#__PURE__*/_jsxDEV(StyledCharacterBuilderTitleContainer, {\n      children: [/*#__PURE__*/_jsxDEV(StyledCharacterBuilderTitle, {\n        children: \"Character builder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledP, {\n        children: [\"Build your character step by step or completely\", ' ', /*#__PURE__*/_jsxDEV(StyledRandomiseButton, {\n          children: \"randomise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), !displayRandom ? /*#__PURE__*/_jsxDEV(StyledStepsContainer, {\n      children: /*#__PURE__*/_jsxDEV(StyledForm, {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(StyledStep, {\n          children: [/*#__PURE__*/_jsxDEV(StyledStepsHeader, {\n            children: \"Step One: Race\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledStepsSubheader, {\n            children: [\"Select a race or\", ' ', /*#__PURE__*/_jsxDEV(StyledRandomiseButton, {\n              onClick: () => handleRandomRace(),\n              children: \"randomise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), ' ', \"it.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledSelect, {\n            value: selectedRace === null || selectedRace === void 0 ? void 0 : selectedRace.name,\n            ...register('race'),\n            onChange: e => {\n              handleSelectedRace(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              selected: true,\n              disabled: true,\n              children: \"- - - -\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), allRaces && (allRaces === null || allRaces === void 0 ? void 0 : (_allRaces$results = allRaces.results) === null || _allRaces$results === void 0 ? void 0 : _allRaces$results.map(race => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: race.index,\n              children: race.name\n            }, race.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 21\n            }, this)))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), errors.race && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), allSubRaces && allSubRaces.results.length > 0 && /*#__PURE__*/_jsxDEV(StyledStep, {\n          children: [/*#__PURE__*/_jsxDEV(StyledStepsSubheader, {\n            children: [\"Select a subrace or\", ' ', /*#__PURE__*/_jsxDEV(StyledRandomiseButton, {\n              onClick: () => handleRandomRace(),\n              children: \"randomise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this), ' ', \"it.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(StyledSelect, {\n            value: selectedSubRace === null || selectedSubRace === void 0 ? void 0 : selectedSubRace.name,\n            ...register('subRace'),\n            onChange: e => {\n              handleSelectedSubRace(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              selected: true,\n              disabled: true,\n              children: \"- - - -\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this), allSubRaces && allSubRaces.results.map(subRace => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: subRace.index,\n              children: subRace.name\n            }, subRace.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this), errors.subRace && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Random\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CharacterBuilder, \"wA/9jhhwuaSjgh3miXmowIDjz6g=\", false, function () {\n  return [useAppDispatch, useAllRaces, useAllRacesLoading, useAllRacesError, useDetailedRace, useAllSubRaces, useForm];\n});\n\n_c12 = CharacterBuilder;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n\n$RefreshReg$(_c, \"StyledCharacterBuilderContainer\");\n$RefreshReg$(_c2, \"StyledCharacterBuilderTitle\");\n$RefreshReg$(_c3, \"StyledCharacterBuilderTitleContainer\");\n$RefreshReg$(_c4, \"StyledStepsContainer\");\n$RefreshReg$(_c5, \"StyledStep\");\n$RefreshReg$(_c6, \"StyledStepsHeader\");\n$RefreshReg$(_c7, \"StyledStepsSubheader\");\n$RefreshReg$(_c8, \"StyledSelect\");\n$RefreshReg$(_c9, \"StyledRandomiseButton\");\n$RefreshReg$(_c10, \"StyledForm\");\n$RefreshReg$(_c11, \"StyledP\");\n$RefreshReg$(_c12, \"CharacterBuilder\");","map":{"version":3,"sources":["/Users/meganjevin/Desktop/Code/character-builder/src/app/pages/characterBuilder.tsx"],"names":["React","useForm","styled","useAppDispatch","commonActions","useAllRaces","useAllRacesError","useAllRacesLoading","useDetailedRace","useAllSubRaces","TEXT_COLOR_PRIMARY","TEXT_COLOR_SECONDARY","StyledCharacterBuilderContainer","div","StyledCharacterBuilderTitle","h1","StyledCharacterBuilderTitleContainer","StyledStepsContainer","StyledStep","StyledStepsHeader","h3","StyledStepsSubheader","h5","StyledSelect","select","StyledRandomiseButton","a","StyledForm","form","StyledP","p","CharacterBuilder","dispatch","displayRandom","setDisplayRandom","useState","allRaces","allRacesLoading","allRacesError","detailedRace","allSubRaces","register","handleSubmit","formState","errors","onSubmit","data","console","log","selectedRace","setSelectedRace","undefined","selectedSubRace","setSelectedSubRace","getRandomInt","maxInt","Math","floor","random","handleRandomise","arr","randomInt","length","handleRandomRace","randomRace","results","index","name","handleSelectedRace","filter","race","handleSelectedSubRace","subRace","useEffect","getAllRaces","getRaceDetails","e","target","value","map"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport styled from 'styled-components';\nimport { useAppDispatch } from '../../helpers/hooks';\nimport { commonActions } from '../../store/slices/common';\nimport {\n  useAllRaces,\n  useAllRacesError,\n  useAllRacesLoading,\n  useDetailedRace,\n  useAllSubRaces,\n  useAllClasses,\n  useAllSubClasses,\n} from '../../store/selectors/common';\nimport { TEXT_COLOR_PRIMARY, TEXT_COLOR_SECONDARY } from '../styles';\nimport { CommonModel } from '../../types';\n\nconst StyledCharacterBuilderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  color: ${TEXT_COLOR_PRIMARY};\n`;\n\nconst StyledCharacterBuilderTitle = styled.h1`\n  text-align: center;\n`;\n\nconst StyledCharacterBuilderTitleContainer = styled.div`\n  text-align: center;\n  margin-bottom: 32px;\n`;\n\nconst StyledStepsContainer = styled.div``;\n\nconst StyledStep = styled.div`\n  text-align: center;\n`;\n\nconst StyledStepsHeader = styled.h3`\n  text-align: center;\n  margin: 12px 0;\n`;\n\nconst StyledStepsSubheader = styled.h5`\n  text-align: center;\n  margin: 12px 0;\n`;\n\nconst StyledSelect = styled.select`\n  width: 200px;\n  height: 30px;\n  border-radius: 5px;\n  margin: 12px 0;\n`;\n\nconst StyledRandomiseButton = styled.a`\n  font-size: inherit;\n  color: ${TEXT_COLOR_SECONDARY};\n  &:hover {\n    cursor: pointer;\n    color: ${TEXT_COLOR_PRIMARY};\n  }\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst StyledP = styled.p`\n  margin: 12px 0;\n`;\n\ninterface FormInputs {\n  race: string;\n  subRace: string;\n  class: string;\n  subClass: string;\n}\n\ninterface APIReference {\n  index: string;\n  name: string;\n}\n\nexport const CharacterBuilder: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const [displayRandom, setDisplayRandom] = React.useState(false);\n  const allRaces = useAllRaces();\n  const allRacesLoading = useAllRacesLoading();\n  const allRacesError = useAllRacesError();\n  const detailedRace = useDetailedRace();\n  const allSubRaces = useAllSubRaces();\n  // const allClasses = useAllClasses();\n  // const allSubClasses = useAllSubClasses();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<FormInputs>();\n  const onSubmit: SubmitHandler<FormInputs> = (data) => console.log(data);\n  const [selectedRace, setSelectedRace] = React.useState<\n    APIReference | undefined\n  >(undefined);\n  const [selectedSubRace, setSelectedSubRace] = React.useState<\n    APIReference | undefined\n  >(undefined);\n  // const [selectedClass, setSelectedClass] = React.useState<\n  //   APIReference | undefined\n  // >(undefined);\n  // const [selectedSubClass, setSelectedSubClass] = React.useState<\n  //   APIReference | undefined\n  // >(undefined);\n\n  const getRandomInt = (maxInt: number) => {\n    return Math.floor(Math.random() * maxInt);\n  };\n\n  const handleRandomise = (arr: Array<CommonModel>) => {\n    const randomInt = getRandomInt(arr.length);\n    return arr[randomInt];\n  };\n\n  const handleRandomRace = () => {\n    const randomRace = handleRandomise(allRaces?.results);\n    setSelectedRace({ index: randomRace.index, name: randomRace.name });\n  };\n\n  const handleSelectedRace = (index: string) => {\n    const selectedRace = allRaces?.results.filter(\n      (race) => race.index === index\n    );\n    if (selectedRace.length > 0) {\n      setSelectedRace({\n        index: selectedRace[0].index,\n        name: selectedRace[0].name,\n      });\n    }\n  };\n\n  const handleSelectedSubRace = (index: string) => {\n    const selectedSubRace = allSubRaces?.results.filter(\n      (subRace) => subRace.index === index\n    );\n    if (selectedSubRace.length > 0) {\n      setSelectedSubRace({\n        index: selectedSubRace[0].index,\n        name: selectedSubRace[0].name,\n      });\n    }\n  };\n\n  // const handleSelectedClass = (index: string) => {\n  //   const selectedClass = allClasses?.results.filter(\n  //     (item) => item.index === index\n  //   );\n  //   if (selectedClass.length > 0) {\n  //     setSelectedClass({\n  //       index: selectedClass[0].index,\n  //       name: selectedClass[0].name,\n  //     });\n  //   }\n  // };\n\n  // const handleSelectedSubClass = (index: string) => {\n  //   const selectedSubClass = allSubClasses?.results.filter(\n  //     (item) => item.index === index\n  //   );\n  //   if (selectedSubClass.length > 0) {\n  //     setSelectedSubClass({\n  //       index: selectedSubClass[0].index,\n  //       name: selectedSubClass[0].name,\n  //     });\n  //   }\n  // };\n\n  React.useEffect(() => {\n    dispatch(commonActions.getAllRaces());\n  }, []);\n\n  React.useEffect(() => {\n    if (selectedRace) {\n      dispatch(commonActions.getRaceDetails({ index: selectedRace.index }));\n    }\n    // console.log(detailedRace);\n  }, [selectedRace]);\n\n  return (\n    <StyledCharacterBuilderContainer>\n      <StyledCharacterBuilderTitleContainer>\n        <StyledCharacterBuilderTitle>\n          Character builder\n        </StyledCharacterBuilderTitle>\n        <StyledP>\n          Build your character step by step or completely{' '}\n          <StyledRandomiseButton>randomise</StyledRandomiseButton>.\n        </StyledP>\n      </StyledCharacterBuilderTitleContainer>\n      {!displayRandom ? (\n        <StyledStepsContainer>\n          <StyledForm onSubmit={handleSubmit(onSubmit)}>\n            {/* Select a race */}\n            <StyledStep>\n              <StyledStepsHeader>Step One: Race</StyledStepsHeader>\n              <StyledStepsSubheader>\n                Select a race or{' '}\n                <StyledRandomiseButton onClick={() => handleRandomRace()}>\n                  randomise\n                </StyledRandomiseButton>{' '}\n                it.\n              </StyledStepsSubheader>\n              <StyledSelect\n                value={selectedRace?.name}\n                {...register('race')}\n                onChange={(e) => {\n                  handleSelectedRace(e.target.value);\n                }}\n              >\n                <option value=\"\" selected disabled>\n                  - - - -\n                </option>\n                {allRaces &&\n                  allRaces?.results?.map((race) => (\n                    <option key={race.index} value={race.index}>\n                      {race.name}\n                    </option>\n                  ))}\n              </StyledSelect>\n\n              {errors.race && <span>This field is required</span>}\n            </StyledStep>\n            {/* Select a subrace */}\n            {allSubRaces && allSubRaces.results.length > 0 && (\n              <StyledStep>\n                <StyledStepsSubheader>\n                  Select a subrace or{' '}\n                  <StyledRandomiseButton onClick={() => handleRandomRace()}>\n                    randomise\n                  </StyledRandomiseButton>{' '}\n                  it.\n                </StyledStepsSubheader>\n                <StyledSelect\n                  value={selectedSubRace?.name}\n                  {...register('subRace')}\n                  onChange={(e) => {\n                    handleSelectedSubRace(e.target.value);\n                  }}\n                >\n                  <option value=\"\" selected disabled>\n                    - - - -\n                  </option>\n                  {allSubRaces &&\n                    allSubRaces.results.map((subRace) => (\n                      <option key={subRace.index} value={subRace.index}>\n                        {subRace.name}\n                      </option>\n                    ))}\n                </StyledSelect>\n\n                {errors.subRace && <span>This field is required</span>}\n              </StyledStep>\n            )}\n            {/* {allClasses && allClasses.results.length > 0 && (\n              <StyledStep>\n                <StyledStepsHeader>Step Two: Class</StyledStepsHeader>\n                <StyledStepsSubheader>\n                  Select a class or{' '}\n                  <StyledRandomiseButton onClick={() => handleRandomRace()}>\n                    randomise\n                  </StyledRandomiseButton>{' '}\n                  it.\n                </StyledStepsSubheader>\n                <StyledSelect\n                  value={selectedClass?.name}\n                  {...register('class')}\n                  onChange={(e) => {\n                    handleSelectedClass(e.target.value);\n                  }}\n                >\n                  <option value=\"\" selected disabled>\n                    - - - -\n                  </option>\n                  {allClasses &&\n                    allClasses.results.map((item) => (\n                      <option key={item.index} value={item.index}>\n                        {item.name}\n                      </option>\n                    ))}\n                </StyledSelect>\n\n                {errors.class && <span>This field is required</span>}\n              </StyledStep>\n            )} */}\n            {/* Select a subclass */}\n            {/* {allSubClasses && allSubClasses.results.length > 0 && (\n              <StyledStep>\n                <StyledStepsSubheader>\n                  Select a subclass or{' '}\n                  <StyledRandomiseButton onClick={() => handleRandomRace()}>\n                    randomise\n                  </StyledRandomiseButton>{' '}\n                  it.\n                </StyledStepsSubheader>\n                <StyledSelect\n                  value={selectedSubClass?.name}\n                  {...register('subClass')}\n                  onChange={(e) => {\n                    handleSelectedSubClass(e.target.value);\n                  }}\n                >\n                  <option value=\"\" selected disabled>\n                    - - - -\n                  </option>\n                  {allSubClasses &&\n                    allSubClasses.results.map((item) => (\n                      <option key={item.index} value={item.index}>\n                        {item.name}\n                      </option>\n                    ))}\n                </StyledSelect>\n\n                {errors.class && <span>This field is required</span>}\n              </StyledStep> */}\n            {/* )} */}\n            {/* Set ability scores */}\n            {/* Select a background */}\n          </StyledForm>\n        </StyledStepsContainer>\n      ) : (\n        <h2>Random</h2>\n      )}\n    </StyledCharacterBuilderContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}