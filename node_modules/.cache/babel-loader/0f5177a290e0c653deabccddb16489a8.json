{"ast":null,"code":"var _jsxFileName = \"/Users/meganjevin/Desktop/Code/character-builder/src/app/components/race.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { useAppDispatch } from '../../helpers/hooks';\nimport { commonActions } from '../../store/slices/common';\nimport { useAllRaces, useDetailedRace } from '../../store/selectors/common';\nimport { TEXT_COLOR_PRIMARY, TEXT_COLOR_SECONDARY } from '../styles';\nimport { handleRandomise } from '../../helpers/randomise';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledStep = styled.div`\n  text-align: center;\n`;\n_c = StyledStep;\nconst StyledStepsHeader = styled.h3`\n  text-align: center;\n  margin: 12px 0;\n`;\n_c2 = StyledStepsHeader;\nconst StyledStepsSubheader = styled.h5`\n  text-align: center;\n  margin: 12px 0;\n`;\n_c3 = StyledStepsSubheader;\nconst StyledSelect = styled.select`\n  width: 200px;\n  height: 30px;\n  border-radius: 5px;\n  margin: 12px 0;\n`;\n_c4 = StyledSelect;\nconst StyledRandomiseButton = styled.a`\n  font-size: inherit;\n  color: ${TEXT_COLOR_SECONDARY};\n  &:hover {\n    cursor: pointer;\n    color: ${TEXT_COLOR_PRIMARY};\n  }\n`;\n_c5 = StyledRandomiseButton;\nexport const Race = props => {\n  _s();\n\n  var _allRaces$results;\n\n  const dispatch = useAppDispatch();\n  const allRaces = useAllRaces();\n  const detailedRace = useDetailedRace();\n  const [selectedRace, setSelectedRace] = React.useState(undefined);\n\n  const handleRandomRace = () => {\n    if (allRaces === null || allRaces === void 0 ? void 0 : allRaces.results) {\n      const randomRace = handleRandomise(allRaces === null || allRaces === void 0 ? void 0 : allRaces.results);\n      setSelectedRace({\n        index: randomRace.index,\n        name: randomRace.name\n      });\n    }\n  };\n\n  const handleSelectedRace = index => {\n    const selectedRace = allRaces === null || allRaces === void 0 ? void 0 : allRaces.results.filter(race => race.index === index);\n\n    if (selectedRace && selectedRace.length > 0) {\n      setSelectedRace({\n        index: selectedRace[0].index,\n        name: selectedRace[0].name\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    dispatch(commonActions.getAllRaces());\n  }, []);\n  React.useEffect(() => {\n    if (selectedRace) {\n      dispatch(commonActions.getRaceDetails({\n        index: selectedRace.index\n      }));\n    }\n\n    console.log(detailedRace); // from here, we need to get the subraces object from the detailed race response and use that to populate the subraces dropdown\n  }, [selectedRace]);\n  return /*#__PURE__*/_jsxDEV(StyledStep, {\n    children: [/*#__PURE__*/_jsxDEV(StyledStepsHeader, {\n      children: \"Step One: Race\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledStepsSubheader, {\n      children: [\"Select a race or\", ' ', /*#__PURE__*/_jsxDEV(StyledRandomiseButton, {\n        onClick: () => handleRandomRace(),\n        children: \"randomise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), ' ', \"it.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledSelect, {\n      value: selectedRace === null || selectedRace === void 0 ? void 0 : selectedRace.index,\n      ...props.register('race'),\n      onChange: e => {\n        handleSelectedRace(e.target.value);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        selected: true,\n        disabled: true,\n        children: \"- - - -\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), allRaces && (allRaces === null || allRaces === void 0 ? void 0 : (_allRaces$results = allRaces.results) === null || _allRaces$results === void 0 ? void 0 : _allRaces$results.map(race => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: race.index,\n        children: race.name\n      }, race.index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), props.errors.race && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"This field is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Race, \"EntiAXxhmcIdq+X/dREz3xV3YSE=\", false, function () {\n  return [useAppDispatch, useAllRaces, useDetailedRace];\n});\n\n_c6 = Race;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"StyledStep\");\n$RefreshReg$(_c2, \"StyledStepsHeader\");\n$RefreshReg$(_c3, \"StyledStepsSubheader\");\n$RefreshReg$(_c4, \"StyledSelect\");\n$RefreshReg$(_c5, \"StyledRandomiseButton\");\n$RefreshReg$(_c6, \"Race\");","map":{"version":3,"sources":["/Users/meganjevin/Desktop/Code/character-builder/src/app/components/race.tsx"],"names":["React","styled","useAppDispatch","commonActions","useAllRaces","useDetailedRace","TEXT_COLOR_PRIMARY","TEXT_COLOR_SECONDARY","handleRandomise","StyledStep","div","StyledStepsHeader","h3","StyledStepsSubheader","h5","StyledSelect","select","StyledRandomiseButton","a","Race","props","dispatch","allRaces","detailedRace","selectedRace","setSelectedRace","useState","undefined","handleRandomRace","results","randomRace","index","name","handleSelectedRace","filter","race","length","useEffect","getAllRaces","getRaceDetails","console","log","register","e","target","value","map","errors"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { DeepMap, FieldError, UseFormRegister } from 'react-hook-form';\nimport { useAppDispatch } from '../../helpers/hooks';\nimport { commonActions } from '../../store/slices/common';\nimport { useAllRaces, useDetailedRace } from '../../store/selectors/common';\nimport { TEXT_COLOR_PRIMARY, TEXT_COLOR_SECONDARY } from '../styles';\nimport { handleRandomise } from '../../helpers/randomise';\nimport { APIReference, FormInputs } from '../../types';\n\ninterface RaceProps {\n  register: UseFormRegister<FormInputs>;\n  errors: DeepMap<FormInputs, FieldError>;\n}\n\nconst StyledStep = styled.div`\n  text-align: center;\n`;\n\nconst StyledStepsHeader = styled.h3`\n  text-align: center;\n  margin: 12px 0;\n`;\n\nconst StyledStepsSubheader = styled.h5`\n  text-align: center;\n  margin: 12px 0;\n`;\n\nconst StyledSelect = styled.select`\n  width: 200px;\n  height: 30px;\n  border-radius: 5px;\n  margin: 12px 0;\n`;\n\nconst StyledRandomiseButton = styled.a`\n  font-size: inherit;\n  color: ${TEXT_COLOR_SECONDARY};\n  &:hover {\n    cursor: pointer;\n    color: ${TEXT_COLOR_PRIMARY};\n  }\n`;\n\nexport const Race: React.FC<RaceProps> = (props) => {\n  const dispatch = useAppDispatch();\n  const allRaces = useAllRaces();\n  const detailedRace = useDetailedRace();\n  const [selectedRace, setSelectedRace] = React.useState<\n    APIReference | undefined\n  >(undefined);\n  const handleRandomRace = () => {\n    if (allRaces?.results) {\n      const randomRace = handleRandomise(allRaces?.results);\n      setSelectedRace({ index: randomRace.index, name: randomRace.name });\n    }\n  };\n\n  const handleSelectedRace = (index: string) => {\n    const selectedRace = allRaces?.results.filter(\n      (race) => race.index === index\n    );\n    if (selectedRace && selectedRace.length > 0) {\n      setSelectedRace({\n        index: selectedRace[0].index,\n        name: selectedRace[0].name,\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    dispatch(commonActions.getAllRaces());\n  }, []);\n\n  React.useEffect(() => {\n    if (selectedRace) {\n      dispatch(commonActions.getRaceDetails({ index: selectedRace.index }));\n    }\n    console.log(detailedRace);\n    // from here, we need to get the subraces object from the detailed race response and use that to populate the subraces dropdown\n  }, [selectedRace]);\n\n  return (\n    <StyledStep>\n      <StyledStepsHeader>Step One: Race</StyledStepsHeader>\n      <StyledStepsSubheader>\n        Select a race or{' '}\n        <StyledRandomiseButton onClick={() => handleRandomRace()}>\n          randomise\n        </StyledRandomiseButton>{' '}\n        it.\n      </StyledStepsSubheader>\n      <StyledSelect\n        value={selectedRace?.index}\n        {...props.register('race')}\n        onChange={(e) => {\n          handleSelectedRace(e.target.value);\n        }}\n      >\n        <option value=\"\" selected disabled>\n          - - - -\n        </option>\n        {allRaces &&\n          allRaces?.results?.map((race) => (\n            <option key={race.index} value={race.index}>\n              {race.name}\n            </option>\n          ))}\n      </StyledSelect>\n\n      {props.errors.race && <span>This field is required</span>}\n    </StyledStep>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}