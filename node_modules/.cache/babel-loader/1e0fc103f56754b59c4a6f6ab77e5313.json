{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$();\n\nimport { shallowEqual, useSelector } from 'react-redux';\nexport const useAllRaces = () => {\n  _s();\n\n  return useSelector(state => state.common.races.options, shallowEqual);\n};\n\n_s(useAllRaces, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport const useAllRacesLoading = () => {\n  _s2();\n\n  return useSelector(state => state.common.races.loading, shallowEqual);\n};\n\n_s2(useAllRacesLoading, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport const useAllRacesError = () => {\n  _s3();\n\n  return useSelector(state => state.common.races.error, shallowEqual);\n};\n\n_s3(useAllRacesError, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport const useDetailedRace = () => {\n  _s4();\n\n  return useSelector(state => state.common.detailedRace.details, shallowEqual);\n};\n\n_s4(useDetailedRace, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport const useAllSubRaces = () => {\n  _s5();\n\n  return useSelector(state => state.common.subRaces.options, shallowEqual);\n};\n\n_s5(useAllSubRaces, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport const useAllClasses = () => {\n  _s6();\n\n  return useSelector(state => state.common.classes.options, shallowEqual);\n};\n\n_s6(useAllClasses, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport const useAllSubClasses = () => {\n  _s7();\n\n  return useSelector(state => state.common.subClasses.options, shallowEqual);\n};\n\n_s7(useAllSubClasses, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"sources":["/Users/meganjevin/Desktop/Code/character-builder/src/store/selectors/common.ts"],"names":["shallowEqual","useSelector","useAllRaces","state","common","races","options","useAllRacesLoading","loading","useAllRacesError","error","useDetailedRace","detailedRace","details","useAllSubRaces","subRaces","useAllClasses","classes","useAllSubClasses","subClasses"],"mappings":";;;;;;;;AAAA,SAASA,YAAT,EAAuBC,WAAvB,QAA0C,aAA1C;AAGA,OAAO,MAAMC,WAAW,GAAG;AAAA;;AAAA,SACzBD,WAAW,CAAEE,KAAD,IAAsBA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,OAA1C,EAAmDN,YAAnD,CADc;AAAA,CAApB;;GAAME,W;UACXD,W;;;AAEF,OAAO,MAAMM,kBAAkB,GAAG;AAAA;;AAAA,SAChCN,WAAW,CAAEE,KAAD,IAAsBA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBG,OAA1C,EAAmDR,YAAnD,CADqB;AAAA,CAA3B;;IAAMO,kB;UACXN,W;;;AAEF,OAAO,MAAMQ,gBAAgB,GAAG;AAAA;;AAAA,SAC9BR,WAAW,CAAEE,KAAD,IAAsBA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBK,KAA1C,EAAiDV,YAAjD,CADmB;AAAA,CAAzB;;IAAMS,gB;UACXR,W;;;AAEF,OAAO,MAAMU,eAAe,GAAG;AAAA;;AAAA,SAC7BV,WAAW,CAAEE,KAAD,IAAsBA,KAAK,CAACC,MAAN,CAAaQ,YAAb,CAA0BC,OAAjD,EAA0Db,YAA1D,CADkB;AAAA,CAAxB;;IAAMW,e;UACXV,W;;;AAEF,OAAO,MAAMa,cAAc,GAAG;AAAA;;AAAA,SAC5Bb,WAAW,CAAEE,KAAD,IAAsBA,KAAK,CAACC,MAAN,CAAaW,QAAb,CAAsBT,OAA7C,EAAsDN,YAAtD,CADiB;AAAA,CAAvB;;IAAMc,c;UACXb,W;;;AAEF,OAAO,MAAMe,aAAa,GAAG;AAAA;;AAAA,SAC3Bf,WAAW,CAAEE,KAAD,IAAsBA,KAAK,CAACC,MAAN,CAAaa,OAAb,CAAqBX,OAA5C,EAAqDN,YAArD,CADgB;AAAA,CAAtB;;IAAMgB,a;UACXf,W;;;AAEF,OAAO,MAAMiB,gBAAgB,GAAG;AAAA;;AAAA,SAC9BjB,WAAW,CAAEE,KAAD,IAAsBA,KAAK,CAACC,MAAN,CAAae,UAAb,CAAwBb,OAA/C,EAAwDN,YAAxD,CADmB;AAAA,CAAzB;;IAAMkB,gB;UACXjB,W","sourcesContent":["import { shallowEqual, useSelector } from 'react-redux';\nimport { RootState } from '..';\n\nexport const useAllRaces = () =>\n  useSelector((state: RootState) => state.common.races.options, shallowEqual);\n\nexport const useAllRacesLoading = () =>\n  useSelector((state: RootState) => state.common.races.loading, shallowEqual);\n\nexport const useAllRacesError = () =>\n  useSelector((state: RootState) => state.common.races.error, shallowEqual);\n\nexport const useDetailedRace = () =>\n  useSelector((state: RootState) => state.common.detailedRace.details, shallowEqual);\n\nexport const useAllSubRaces = () =>\n  useSelector((state: RootState) => state.common.subRaces.options, shallowEqual);\n\nexport const useAllClasses = () =>\n  useSelector((state: RootState) => state.common.classes.options, shallowEqual);\n\nexport const useAllSubClasses = () =>\n  useSelector((state: RootState) => state.common.subClasses.options, shallowEqual);"]},"metadata":{},"sourceType":"module"}