{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { characterBuilderReducer } from './slices/characterBuilder';\nimport { glossaryReducer } from './slices/glossary';\nimport { commonReducer } from './slices/common';\nexport const store = configureStore({\n  reducer: {\n    characterBuilder: characterBuilderReducer,\n    glossary: glossaryReducer,\n    common: commonReducer\n  }\n});","map":{"version":3,"sources":["/Users/meganjevin/Desktop/Code/character-builder/src/store/store.ts"],"names":["configureStore","characterBuilderReducer","glossaryReducer","commonReducer","store","reducer","characterBuilder","glossary","common"],"mappings":"AAAA,SAASA,cAAT,QAAoD,kBAApD;AACA,SAASC,uBAAT,QAAwC,2BAAxC;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,OAAO,MAAMC,KAAK,GAAGJ,cAAc,CAAC;AAClCK,EAAAA,OAAO,EAAE;AACPC,IAAAA,gBAAgB,EAAEL,uBADX;AAEPM,IAAAA,QAAQ,EAAEL,eAFH;AAGPM,IAAAA,MAAM,EAAEL;AAHD;AADyB,CAAD,CAA5B","sourcesContent":["import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport { characterBuilderReducer } from './slices/characterBuilder';\nimport { glossaryReducer } from './slices/glossary';\nimport { commonReducer } from './slices/common';\n\nexport const store = configureStore({\n  reducer: {\n    characterBuilder: characterBuilderReducer,\n    glossary: glossaryReducer,\n    common: commonReducer,\n  },\n})\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n"]},"metadata":{},"sourceType":"module"}