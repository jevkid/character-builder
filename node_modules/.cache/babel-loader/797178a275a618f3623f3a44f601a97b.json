{"ast":null,"code":"import { createAction, createSlice } from '@reduxjs/toolkit'; // set selected race\n// set selected subrace\n// set selected class\n// set selected subclass\n// set ability scores { each individual one }\n// set selected background\n// save form\n\nconst initialState = {};\nconst SLICE_NAME = 'characterBuilder';\nconst characterBuilderSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {\n    setSelectedRaceToState: (state, action) => {\n      state.selectedRace = action.payload;\n    },\n    setSelectedSubraceToState: (state, action) => {\n      state.selectedSubrace = action.payload;\n    },\n    setSelectedClassToState: (state, action) => {\n      state.selectedClass = action.payload;\n    },\n    setSelectedSubclassToState: (state, action) => {\n      state.selectedSubclass = action.payload;\n    }\n  }\n});\nexport const {\n  reducer: characterBuilderReducer\n} = characterBuilderSlice;\nexport const characterBuilderActions = { ...characterBuilderSlice.actions,\n  getCharacterBuilder: createAction(`${SLICE_NAME}/getCharacterBuilder`, payload => ({\n    payload\n  }))\n};","map":{"version":3,"sources":["/Users/meganjevin/Desktop/Code/character-builder/src/store/slices/characterBuilder.ts"],"names":["createAction","createSlice","initialState","SLICE_NAME","characterBuilderSlice","name","reducers","setSelectedRaceToState","state","action","selectedRace","payload","setSelectedSubraceToState","selectedSubrace","setSelectedClassToState","selectedClass","setSelectedSubclassToState","selectedSubclass","reducer","characterBuilderReducer","characterBuilderActions","actions","getCharacterBuilder"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,WAAvB,QAAyD,kBAAzD,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAUA,MAAMC,YAAmC,GAAG,EAA5C;AAIA,MAAMC,UAAU,GAAG,kBAAnB;AAEA,MAAMC,qBAAqB,GAAGH,WAAW,CAAC;AACxCI,EAAAA,IAAI,EAAEF,UADkC;AAExCD,EAAAA,YAFwC;AAGxCI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,sBAAsB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAA0C;AAChED,MAAAA,KAAK,CAACE,YAAN,GAAqBD,MAAM,CAACE,OAA5B;AACD,KAHO;AAIRC,IAAAA,yBAAyB,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAA0C;AACnED,MAAAA,KAAK,CAACK,eAAN,GAAwBJ,MAAM,CAACE,OAA/B;AACD,KANO;AAORG,IAAAA,uBAAuB,EAAE,CAACN,KAAD,EAAQC,MAAR,KAA0C;AACjED,MAAAA,KAAK,CAACO,aAAN,GAAsBN,MAAM,CAACE,OAA7B;AACD,KATO;AAURK,IAAAA,0BAA0B,EAAE,CAACR,KAAD,EAAQC,MAAR,KAA0C;AACpED,MAAAA,KAAK,CAACS,gBAAN,GAAyBR,MAAM,CAACE,OAAhC;AACD;AAZO;AAH8B,CAAD,CAAzC;AAmBA,OAAO,MAAM;AAAEO,EAAAA,OAAO,EAAEC;AAAX,IAAuCf,qBAA7C;AAEP,OAAO,MAAMgB,uBAAuB,GAAG,EACrC,GAAGhB,qBAAqB,CAACiB,OADY;AAGrCC,EAAAA,mBAAmB,EAAEtB,YAAY,CAC9B,GAAEG,UAAW,sBADiB,EAE9BQ,OAAD,KAAkC;AAChCA,IAAAA;AADgC,GAAlC,CAF+B;AAHI,CAAhC","sourcesContent":["import { createAction, createSlice, PayloadAction } from '@reduxjs/toolkit';\n\n// set selected race\n// set selected subrace\n// set selected class\n// set selected subclass\n// set ability scores { each individual one }\n// set selected background\n// save form\n\n\nexport interface CharacterBuilderState {\n  selectedRace?: string;\n  selectedSubrace?: string;\n  selectedClass?: string;\n  selectedSubclass?: string;\n}\n\nconst initialState: CharacterBuilderState = {\n\n};\n\nconst SLICE_NAME = 'characterBuilder';\n\nconst characterBuilderSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {\n    setSelectedRaceToState: (state, action: PayloadAction<string>) => {\n      state.selectedRace = action.payload;\n    },\n    setSelectedSubraceToState: (state, action: PayloadAction<string>) => {\n      state.selectedSubrace = action.payload;\n    },\n    setSelectedClassToState: (state, action: PayloadAction<string>) => {\n      state.selectedClass = action.payload;\n    },\n    setSelectedSubclassToState: (state, action: PayloadAction<string>) => {\n      state.selectedSubclass = action.payload;\n    },\n  },\n});\n\nexport const { reducer: characterBuilderReducer } = characterBuilderSlice;\n\nexport const characterBuilderActions = {\n  ...characterBuilderSlice.actions,\n\n  getCharacterBuilder: createAction(\n    `${SLICE_NAME}/getCharacterBuilder`,\n    (payload: { character: any }) => ({\n      payload,\n    }),\n  ),\n};\n"]},"metadata":{},"sourceType":"module"}