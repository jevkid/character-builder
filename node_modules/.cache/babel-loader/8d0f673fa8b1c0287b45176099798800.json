{"ast":null,"code":"var _jsxFileName = \"/Users/meganjevin/Desktop/Code/character-builder/src/app/pages/characterBuilder.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport styled from 'styled-components';\nimport { useAppDispatch } from '../../helpers/hooks';\nimport { commonActions } from '../../store/slices/common';\nimport { useAllRaces } from '../../store/selectors/common';\nimport { TEXT_COLOR_PRIMARY, TEXT_COLOR_SECONDARY } from '../styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledCharacterBuilderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  color: ${TEXT_COLOR_PRIMARY};\n`;\n_c = StyledCharacterBuilderContainer;\nconst StyledCharacterBuilderTitle = styled.h1`\n  text-align: center;\n`;\n_c2 = StyledCharacterBuilderTitle;\nconst StyledCharacterBuilderTitleContainer = styled.div`\n  text-align: center;\n  margin-bottom: 32px;\n`;\n_c3 = StyledCharacterBuilderTitleContainer;\nconst StyledStepsContainer = styled.div``;\n_c4 = StyledStepsContainer;\nconst StyledStep = styled.div``;\n_c5 = StyledStep;\nconst StyledStepsHeader = styled.h3`\n  text-align: center;\n  margin: 12px 0;\n`;\n_c6 = StyledStepsHeader;\nconst StyledStepsSubheader = styled.h5`\n  text-align: center;\n  margin: 12px 0;\n`;\n_c7 = StyledStepsSubheader;\nconst StyledSelect = styled.select`\n  width: 200px;\n  height: 30px;\n  border-radius: 5px;\n  margin: 12px 0;\n`;\n_c8 = StyledSelect;\nconst StyledRandomiseButton = styled.a`\n  font-size: inherit;\n  color: ${TEXT_COLOR_SECONDARY};\n  &:hover {\n    cursor: pointer;\n    color: ${TEXT_COLOR_PRIMARY};\n  }\n`;\n_c9 = StyledRandomiseButton;\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c10 = StyledForm;\nconst StyledP = styled.p`\n  margin: 12px 0;\n`;\n_c11 = StyledP;\nexport const CharacterBuilder = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const [displayRandom, setDisplayRandom] = React.useState(false);\n  const allRaces = useAllRaces();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  const [selectedRace, setSelectedRace] = React.useState('');\n\n  const getRandomInt = maxInt => {\n    return Math.floor(Math.random() * maxInt);\n  };\n\n  const handleRandomise = arr => {\n    const randomInt = getRandomInt(arr.length);\n    return arr[randomInt];\n  };\n\n  const handleRandomRace = () => {\n    const randomRace = handleRandomise(allRaces);\n    setSelectedRace(randomRace.name);\n  };\n\n  React.useEffect(() => {\n    dispatch(commonActions.getAllRaces());\n\n    if (selectedRace) {\n      dispatch(commonActions.getAllSubRaces());\n    }\n  }, [dispatch, selectedRace]);\n  return /*#__PURE__*/_jsxDEV(StyledCharacterBuilderContainer, {\n    children: [/*#__PURE__*/_jsxDEV(StyledCharacterBuilderTitleContainer, {\n      children: [/*#__PURE__*/_jsxDEV(StyledCharacterBuilderTitle, {\n        children: \"Character builder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledP, {\n        children: [\"Build your character step by step or completely\", ' ', /*#__PURE__*/_jsxDEV(StyledRandomiseButton, {\n          children: \"randomise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), !displayRandom ? /*#__PURE__*/_jsxDEV(StyledStepsContainer, {\n      children: /*#__PURE__*/_jsxDEV(StyledForm, {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(StyledStep, {\n          children: [/*#__PURE__*/_jsxDEV(StyledStepsHeader, {\n            children: \"Step One: Race\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledStepsSubheader, {\n            children: [\"Select a race or\", ' ', /*#__PURE__*/_jsxDEV(StyledRandomiseButton, {\n              onClick: () => handleRandomRace(),\n              children: \"randomise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), ' ', \"it.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledSelect, {\n            value: selectedRace,\n            ...register('race'),\n            onChange: e => {\n              setSelectedRace(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              selected: true,\n              disabled: true,\n              children: \"- - - -\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), allRaces && allRaces.map(race => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: race.name\n            }, race.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), errors.race && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StyledStep, {\n          children: [/*#__PURE__*/_jsxDEV(StyledStepsSubheader, {\n            children: [\"Select a subrace or\", ' ', /*#__PURE__*/_jsxDEV(StyledRandomiseButton, {\n              onClick: () => handleRandomRace(),\n              children: \"randomise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this), ' ', \"it.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledSelect, {\n            value: selectedRace,\n            ...register('subRace'),\n            onChange: e => {\n              setSelectedRace(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              selected: true,\n              disabled: true,\n              children: \"- - - -\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), allRaces && allRaces.map(race => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: race.name\n            }, race.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), errors.subRace && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Random\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CharacterBuilder, \"qdy5Q0GldibieRp0ePBNoOdnVGQ=\", false, function () {\n  return [useAppDispatch, useAllRaces, useForm];\n});\n\n_c12 = CharacterBuilder;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n\n$RefreshReg$(_c, \"StyledCharacterBuilderContainer\");\n$RefreshReg$(_c2, \"StyledCharacterBuilderTitle\");\n$RefreshReg$(_c3, \"StyledCharacterBuilderTitleContainer\");\n$RefreshReg$(_c4, \"StyledStepsContainer\");\n$RefreshReg$(_c5, \"StyledStep\");\n$RefreshReg$(_c6, \"StyledStepsHeader\");\n$RefreshReg$(_c7, \"StyledStepsSubheader\");\n$RefreshReg$(_c8, \"StyledSelect\");\n$RefreshReg$(_c9, \"StyledRandomiseButton\");\n$RefreshReg$(_c10, \"StyledForm\");\n$RefreshReg$(_c11, \"StyledP\");\n$RefreshReg$(_c12, \"CharacterBuilder\");","map":{"version":3,"sources":["/Users/meganjevin/Desktop/Code/character-builder/src/app/pages/characterBuilder.tsx"],"names":["React","useForm","styled","useAppDispatch","commonActions","useAllRaces","TEXT_COLOR_PRIMARY","TEXT_COLOR_SECONDARY","StyledCharacterBuilderContainer","div","StyledCharacterBuilderTitle","h1","StyledCharacterBuilderTitleContainer","StyledStepsContainer","StyledStep","StyledStepsHeader","h3","StyledStepsSubheader","h5","StyledSelect","select","StyledRandomiseButton","a","StyledForm","form","StyledP","p","CharacterBuilder","dispatch","displayRandom","setDisplayRandom","useState","allRaces","register","handleSubmit","formState","errors","onSubmit","data","console","log","selectedRace","setSelectedRace","getRandomInt","maxInt","Math","floor","random","handleRandomise","arr","randomInt","length","handleRandomRace","randomRace","name","useEffect","getAllRaces","getAllSubRaces","e","target","value","map","race","index","subRace"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport styled from 'styled-components';\nimport { useAppDispatch } from '../../helpers/hooks';\nimport { commonActions } from '../../store/slices/common';\nimport { useAllRaces } from '../../store/selectors/common';\nimport { TEXT_COLOR_PRIMARY, TEXT_COLOR_SECONDARY } from '../styles';\n\nconst StyledCharacterBuilderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  color: ${TEXT_COLOR_PRIMARY};\n`;\n\nconst StyledCharacterBuilderTitle = styled.h1`\n  text-align: center;\n`;\n\nconst StyledCharacterBuilderTitleContainer = styled.div`\n  text-align: center;\n  margin-bottom: 32px;\n`;\n\nconst StyledStepsContainer = styled.div``;\n\nconst StyledStep = styled.div``;\n\nconst StyledStepsHeader = styled.h3`\n  text-align: center;\n  margin: 12px 0;\n`;\n\nconst StyledStepsSubheader = styled.h5`\n  text-align: center;\n  margin: 12px 0;\n`;\n\nconst StyledSelect = styled.select`\n  width: 200px;\n  height: 30px;\n  border-radius: 5px;\n  margin: 12px 0;\n`;\n\nconst StyledRandomiseButton = styled.a`\n  font-size: inherit;\n  color: ${TEXT_COLOR_SECONDARY};\n  &:hover {\n    cursor: pointer;\n    color: ${TEXT_COLOR_PRIMARY};\n  }\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst StyledP = styled.p`\n  margin: 12px 0;\n`;\n\ninterface FormInputs {\n  race: string;\n  subRace: string;\n  class: string;\n  subClass: string;\n}\n\nexport const CharacterBuilder: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const [displayRandom, setDisplayRandom] = React.useState(false);\n  const allRaces = useAllRaces();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<FormInputs>();\n  const onSubmit: SubmitHandler<FormInputs> = (data) => console.log(data);\n  const [selectedRace, setSelectedRace] = React.useState<string>('');\n\n  const getRandomInt = (maxInt: number) => {\n    return Math.floor(Math.random() * maxInt);\n  };\n\n  const handleRandomise = (arr: Array<any>) => {\n    const randomInt = getRandomInt(arr.length);\n    return arr[randomInt];\n  };\n\n  const handleRandomRace = () => {\n    const randomRace = handleRandomise(allRaces);\n    setSelectedRace(randomRace.name);\n  };\n\n  React.useEffect(() => {\n    dispatch(commonActions.getAllRaces());\n    if (selectedRace) {\n      dispatch(commonActions.getAllSubRaces());\n    }\n  }, [dispatch, selectedRace]);\n\n  return (\n    <StyledCharacterBuilderContainer>\n      <StyledCharacterBuilderTitleContainer>\n        <StyledCharacterBuilderTitle>\n          Character builder\n        </StyledCharacterBuilderTitle>\n        <StyledP>\n          Build your character step by step or completely{' '}\n          <StyledRandomiseButton>randomise</StyledRandomiseButton>.\n        </StyledP>\n      </StyledCharacterBuilderTitleContainer>\n      {!displayRandom ? (\n        <StyledStepsContainer>\n          <StyledForm onSubmit={handleSubmit(onSubmit)}>\n            {/* Select a race */}\n            <StyledStep>\n              <StyledStepsHeader>Step One: Race</StyledStepsHeader>\n              <StyledStepsSubheader>\n                Select a race or{' '}\n                <StyledRandomiseButton onClick={() => handleRandomRace()}>\n                  randomise\n                </StyledRandomiseButton>{' '}\n                it.\n              </StyledStepsSubheader>\n              <StyledSelect\n                value={selectedRace}\n                {...register('race')}\n                onChange={(e) => {\n                  setSelectedRace(e.target.value);\n                }}\n              >\n                <option value=\"\" selected disabled>\n                  - - - -\n                </option>\n                {allRaces &&\n                  allRaces.map((race) => (\n                    <option key={race.index}>{race.name}</option>\n                  ))}\n              </StyledSelect>\n\n              {errors.race && <span>This field is required</span>}\n            </StyledStep>\n            {/* Select a subrace */}\n            <StyledStep>\n              <StyledStepsSubheader>\n                Select a subrace or{' '}\n                <StyledRandomiseButton onClick={() => handleRandomRace()}>\n                  randomise\n                </StyledRandomiseButton>{' '}\n                it.\n              </StyledStepsSubheader>\n              <StyledSelect\n                value={selectedRace}\n                {...register('subRace')}\n                onChange={(e) => {\n                  setSelectedRace(e.target.value);\n                }}\n              >\n                <option value=\"\" selected disabled>\n                  - - - -\n                </option>\n                {allRaces &&\n                  allRaces.map((race) => (\n                    <option key={race.index}>{race.name}</option>\n                  ))}\n              </StyledSelect>\n\n              {errors.subRace && <span>This field is required</span>}\n            </StyledStep>\n            {/* Select a class */}\n            {/* Select a subclass */}\n            {/* Set ability scores */}\n            {/* Select a background */}\n          </StyledForm>\n        </StyledStepsContainer>\n      ) : (\n        <h2>Random</h2>\n      )}\n    </StyledCharacterBuilderContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}