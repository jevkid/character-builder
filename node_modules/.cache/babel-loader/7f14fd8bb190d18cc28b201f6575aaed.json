{"ast":null,"code":"var _jsxFileName = \"/Users/meganjevin/Desktop/Code/character-builder/src/app/components/race.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { useAppDispatch } from '../../helpers/hooks';\nimport { commonActions } from '../../store/slices/common';\nimport { useAllRaces, useDetailedRace } from '../../store/selectors/common';\nimport { TEXT_COLOR_PRIMARY, TEXT_COLOR_SECONDARY } from '../styles';\nimport { handleRandomise } from '../../helpers/randomise';\nimport { AbilityMapEnum } from '../../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledStep = styled.div`\n  text-align: center;\n  margin-right: 48px;\n`;\n_c = StyledStep;\nconst StyledStepsHeader = styled.h3`\n  text-align: center;\n  margin: 12px 0;\n`;\n_c2 = StyledStepsHeader;\nconst StyledStepsSubheader = styled.h5`\n  text-align: center;\n  margin: 12px 0;\n`;\n_c3 = StyledStepsSubheader;\nconst StyledSelect = styled.select`\n  width: 200px;\n  height: 30px;\n  border-radius: 5px;\n  margin: 12px 0;\n`;\n_c4 = StyledSelect;\nconst StyledRandomiseButton = styled.a`\n  font-size: inherit;\n  color: ${TEXT_COLOR_SECONDARY};\n  &:hover {\n    cursor: pointer;\n    color: ${TEXT_COLOR_PRIMARY};\n  }\n`;\n_c5 = StyledRandomiseButton;\nconst StyledRaceContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n_c6 = StyledRaceContainer;\nconst StyledDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 45%;\n`;\n_c7 = StyledDetails;\nconst StyledP = styled.p``;\n_c8 = StyledP;\nconst StyledList = styled.ul``;\n_c9 = StyledList;\nconst StyledListItem = styled.li``;\n_c10 = StyledListItem;\nexport const Race = props => {\n  _s();\n\n  var _allRaces$results;\n\n  const dispatch = useAppDispatch();\n  const allRaces = useAllRaces();\n  const detailedRace = useDetailedRace();\n  const [allSubRaces, setAllSubRaces] = React.useState([]);\n  const [selectedRace, setSelectedRace] = React.useState(undefined);\n  const [selectedSubRace, setSelectedSubRace] = React.useState(undefined);\n  const [displayRaceDetails, setDisplayRaceDetails] = React.useState(false);\n\n  const handleSelectedSubRace = index => {\n    const selectedSubRace = allSubRaces === null || allSubRaces === void 0 ? void 0 : allSubRaces.filter(subRace => subRace.index === index);\n\n    if (selectedSubRace && selectedSubRace.length > 0) {\n      setSelectedSubRace({\n        index: selectedSubRace[0].index,\n        name: selectedSubRace[0].name\n      });\n    }\n  };\n\n  const handleRandomRace = () => {\n    if (allRaces === null || allRaces === void 0 ? void 0 : allRaces.results) {\n      const randomRace = handleRandomise(allRaces === null || allRaces === void 0 ? void 0 : allRaces.results);\n      setSelectedRace({\n        index: randomRace.index,\n        name: randomRace.name\n      });\n      dispatch(commonActions.getRaceDetails({\n        index: randomRace.index\n      }));\n    }\n  };\n\n  const handleSelectedRace = index => {\n    const selectedRace = allRaces === null || allRaces === void 0 ? void 0 : allRaces.results.filter(race => race.index === index);\n\n    if (selectedRace && selectedRace.length > 0) {\n      setSelectedRace({\n        index: selectedRace[0].index,\n        name: selectedRace[0].name\n      });\n      dispatch(commonActions.getRaceDetails({\n        index: selectedRace[0].index\n      }));\n    }\n  };\n\n  React.useEffect(() => {\n    dispatch(commonActions.getAllRaces());\n  }, []);\n  React.useEffect(() => {\n    if (detailedRace === null || detailedRace === void 0 ? void 0 : detailedRace.subraces) {\n      setAllSubRaces(detailedRace === null || detailedRace === void 0 ? void 0 : detailedRace.subraces);\n      setDisplayRaceDetails(true);\n    } // from here, we need to get the subraces object from the detailed race response and use that to populate the subraces dropdown\n\n  }, [detailedRace]);\n  return /*#__PURE__*/_jsxDEV(StyledRaceContainer, {\n    children: [/*#__PURE__*/_jsxDEV(StyledStep, {\n      children: [/*#__PURE__*/_jsxDEV(StyledStepsHeader, {\n        children: \"Step One: Race\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledStepsSubheader, {\n        children: [\"Select a race or\", ' ', /*#__PURE__*/_jsxDEV(StyledRandomiseButton, {\n          onClick: () => handleRandomRace(),\n          children: \"randomise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), ' ', \"it.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledSelect, {\n        value: selectedRace === null || selectedRace === void 0 ? void 0 : selectedRace.index,\n        ...props.register('race'),\n        onChange: e => {\n          handleSelectedRace(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"- - - -\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), allRaces && (allRaces === null || allRaces === void 0 ? void 0 : (_allRaces$results = allRaces.results) === null || _allRaces$results === void 0 ? void 0 : _allRaces$results.map(race => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: race.index,\n          children: race.name\n        }, race.index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this)))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), props.errors.race && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"This field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 31\n      }, this), allSubRaces && allSubRaces.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(StyledStepsSubheader, {\n          children: \"Select a subrace.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StyledSelect, {\n          value: selectedSubRace === null || selectedSubRace === void 0 ? void 0 : selectedSubRace.name,\n          ...props.register('subRace'),\n          onChange: e => {\n            handleSelectedSubRace(e.target.value);\n          },\n          children: allSubRaces.map(subRace => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: subRace.index,\n            children: subRace.name\n          }, subRace.index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), props.errors.subRace && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), detailedRace && displayRaceDetails && /*#__PURE__*/_jsxDEV(StyledDetails, {\n      children: [/*#__PURE__*/_jsxDEV(StyledStepsHeader, {\n        children: detailedRace.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledP, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Ability score increase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), \":\", /*#__PURE__*/_jsxDEV(StyledList, {\n          children: detailedRace.ability_bonuses.map(bonus => /*#__PURE__*/_jsxDEV(StyledListItem, {\n            children: [\"Your \", AbilityMapEnum[bonus.ability_score.name], \" score increases by \", bonus.bonus, ' ']\n          }, bonus.ability_score.index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledP, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), \": \", detailedRace.age]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledP, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Alignment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), \": \", detailedRace.alignment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledP, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Size\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), \": \", detailedRace.size, \" -\", ' ', detailedRace.size_description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledP, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Speed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), \": \", detailedRace.speed]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledP, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Traits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledList, {\n        children: detailedRace.traits.map(trait => /*#__PURE__*/_jsxDEV(StyledListItem, {\n          children: trait.name\n        }, trait.index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledP, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Languages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), \": \", detailedRace.language_desc]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledList, {\n        children: detailedRace.languages.map(language => /*#__PURE__*/_jsxDEV(StyledListItem, {\n          children: language.name\n        }, language.index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledP, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Starting proficiences\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledList, {\n        children: detailedRace.starting_proficiencies.map(item => /*#__PURE__*/_jsxDEV(StyledListItem, {\n          children: item.name\n        }, item.index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Race, \"EnJM1emUosLzGI+CrjFgqnxPB5Y=\", false, function () {\n  return [useAppDispatch, useAllRaces, useDetailedRace];\n});\n\n_c11 = Race;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"StyledStep\");\n$RefreshReg$(_c2, \"StyledStepsHeader\");\n$RefreshReg$(_c3, \"StyledStepsSubheader\");\n$RefreshReg$(_c4, \"StyledSelect\");\n$RefreshReg$(_c5, \"StyledRandomiseButton\");\n$RefreshReg$(_c6, \"StyledRaceContainer\");\n$RefreshReg$(_c7, \"StyledDetails\");\n$RefreshReg$(_c8, \"StyledP\");\n$RefreshReg$(_c9, \"StyledList\");\n$RefreshReg$(_c10, \"StyledListItem\");\n$RefreshReg$(_c11, \"Race\");","map":{"version":3,"sources":["/Users/meganjevin/Desktop/Code/character-builder/src/app/components/race.tsx"],"names":["React","styled","useAppDispatch","commonActions","useAllRaces","useDetailedRace","TEXT_COLOR_PRIMARY","TEXT_COLOR_SECONDARY","handleRandomise","AbilityMapEnum","StyledStep","div","StyledStepsHeader","h3","StyledStepsSubheader","h5","StyledSelect","select","StyledRandomiseButton","a","StyledRaceContainer","StyledDetails","StyledP","p","StyledList","ul","StyledListItem","li","Race","props","dispatch","allRaces","detailedRace","allSubRaces","setAllSubRaces","useState","selectedRace","setSelectedRace","undefined","selectedSubRace","setSelectedSubRace","displayRaceDetails","setDisplayRaceDetails","handleSelectedSubRace","index","filter","subRace","length","name","handleRandomRace","results","randomRace","getRaceDetails","handleSelectedRace","race","useEffect","getAllRaces","subraces","register","e","target","value","map","errors","ability_bonuses","bonus","ability_score","age","alignment","size","size_description","speed","traits","trait","language_desc","languages","language","starting_proficiencies","item"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { DeepMap, FieldError, UseFormRegister } from 'react-hook-form';\nimport { useAppDispatch } from '../../helpers/hooks';\nimport { commonActions } from '../../store/slices/common';\nimport { useAllRaces, useDetailedRace } from '../../store/selectors/common';\nimport { TEXT_COLOR_PRIMARY, TEXT_COLOR_SECONDARY } from '../styles';\nimport { handleRandomise } from '../../helpers/randomise';\nimport {\n  AbilityMapEnum,\n  APIReference,\n  CommonModel,\n  FormInputs,\n} from '../../types';\n\ninterface RaceProps {\n  register: UseFormRegister<FormInputs>;\n  errors: DeepMap<FormInputs, FieldError>;\n}\n\nconst StyledStep = styled.div`\n  text-align: center;\n  margin-right: 48px;\n`;\n\nconst StyledStepsHeader = styled.h3`\n  text-align: center;\n  margin: 12px 0;\n`;\n\nconst StyledStepsSubheader = styled.h5`\n  text-align: center;\n  margin: 12px 0;\n`;\n\nconst StyledSelect = styled.select`\n  width: 200px;\n  height: 30px;\n  border-radius: 5px;\n  margin: 12px 0;\n`;\n\nconst StyledRandomiseButton = styled.a`\n  font-size: inherit;\n  color: ${TEXT_COLOR_SECONDARY};\n  &:hover {\n    cursor: pointer;\n    color: ${TEXT_COLOR_PRIMARY};\n  }\n`;\n\nconst StyledRaceContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst StyledDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 45%;\n`;\n\nconst StyledP = styled.p``;\n\nconst StyledList = styled.ul``;\n\nconst StyledListItem = styled.li``;\n\nexport const Race: React.FC<RaceProps> = (props) => {\n  const dispatch = useAppDispatch();\n  const allRaces = useAllRaces();\n  const detailedRace = useDetailedRace();\n  const [allSubRaces, setAllSubRaces] = React.useState<\n    CommonModel[] | undefined\n  >([]);\n  const [selectedRace, setSelectedRace] = React.useState<\n    APIReference | undefined\n  >(undefined);\n  const [selectedSubRace, setSelectedSubRace] = React.useState<\n    APIReference | undefined\n  >(undefined);\n  const [displayRaceDetails, setDisplayRaceDetails] = React.useState(false);\n\n  const handleSelectedSubRace = (index: string) => {\n    const selectedSubRace = allSubRaces?.filter(\n      (subRace) => subRace.index === index\n    );\n    if (selectedSubRace && selectedSubRace.length > 0) {\n      setSelectedSubRace({\n        index: selectedSubRace[0].index,\n        name: selectedSubRace[0].name,\n      });\n    }\n  };\n\n  const handleRandomRace = () => {\n    if (allRaces?.results) {\n      const randomRace = handleRandomise(allRaces?.results);\n      setSelectedRace({ index: randomRace.index, name: randomRace.name });\n      dispatch(commonActions.getRaceDetails({ index: randomRace.index }));\n    }\n  };\n\n  const handleSelectedRace = (index: string) => {\n    const selectedRace = allRaces?.results.filter(\n      (race) => race.index === index\n    );\n    if (selectedRace && selectedRace.length > 0) {\n      setSelectedRace({\n        index: selectedRace[0].index,\n        name: selectedRace[0].name,\n      });\n      dispatch(commonActions.getRaceDetails({ index: selectedRace[0].index }));\n    }\n  };\n\n  React.useEffect(() => {\n    dispatch(commonActions.getAllRaces());\n  }, []);\n\n  React.useEffect(() => {\n    if (detailedRace?.subraces) {\n      setAllSubRaces(detailedRace?.subraces);\n      setDisplayRaceDetails(true);\n    }\n    // from here, we need to get the subraces object from the detailed race response and use that to populate the subraces dropdown\n  }, [detailedRace]);\n\n  return (\n    <StyledRaceContainer>\n      <StyledStep>\n        <StyledStepsHeader>Step One: Race</StyledStepsHeader>\n        <StyledStepsSubheader>\n          Select a race or{' '}\n          <StyledRandomiseButton onClick={() => handleRandomRace()}>\n            randomise\n          </StyledRandomiseButton>{' '}\n          it.\n        </StyledStepsSubheader>\n        <StyledSelect\n          value={selectedRace?.index}\n          {...props.register('race')}\n          onChange={(e) => {\n            handleSelectedRace(e.target.value);\n          }}\n        >\n          <option value=\"\" disabled>\n            - - - -\n          </option>\n          {allRaces &&\n            allRaces?.results?.map((race) => (\n              <option key={race.index} value={race.index}>\n                {race.name}\n              </option>\n            ))}\n        </StyledSelect>\n\n        {props.errors.race && <span>This field is required</span>}\n        {allSubRaces && allSubRaces.length > 0 && (\n          <>\n            <StyledStepsSubheader>Select a subrace.</StyledStepsSubheader>\n            <StyledSelect\n              value={selectedSubRace?.name}\n              {...props.register('subRace')}\n              onChange={(e) => {\n                handleSelectedSubRace(e.target.value);\n              }}\n            >\n              {allSubRaces.map((subRace) => (\n                <option key={subRace.index} value={subRace.index}>\n                  {subRace.name}\n                </option>\n              ))}\n            </StyledSelect>\n\n            {props.errors.subRace && <span>This field is required</span>}\n          </>\n        )}\n      </StyledStep>\n      {detailedRace && displayRaceDetails && (\n        <StyledDetails>\n          <StyledStepsHeader>{detailedRace.name}</StyledStepsHeader>\n          <StyledP>\n            <strong>Ability score increase</strong>:\n            <StyledList>\n              {detailedRace.ability_bonuses.map((bonus) => (\n                <StyledListItem key={bonus.ability_score.index}>\n                  Your {AbilityMapEnum[bonus.ability_score.name]} score\n                  increases by {bonus.bonus}{' '}\n                </StyledListItem>\n              ))}\n            </StyledList>\n          </StyledP>\n          <StyledP>\n            <strong>Age</strong>: {detailedRace.age}\n          </StyledP>\n          <StyledP>\n            <strong>Alignment</strong>: {detailedRace.alignment}\n          </StyledP>\n          <StyledP>\n            <strong>Size</strong>: {detailedRace.size} -{' '}\n            {detailedRace.size_description}\n          </StyledP>\n          <StyledP>\n            <strong>Speed</strong>: {detailedRace.speed}\n          </StyledP>\n          <StyledP>\n            <strong>Traits</strong>:\n          </StyledP>\n          <StyledList>\n            {detailedRace.traits.map((trait) => (\n              <StyledListItem key={trait.index}>{trait.name}</StyledListItem>\n            ))}\n          </StyledList>\n          <StyledP>\n            <strong>Languages</strong>: {detailedRace.language_desc}\n          </StyledP>\n          <StyledList>\n            {detailedRace.languages.map((language) => (\n              <StyledListItem key={language.index}>\n                {language.name}\n              </StyledListItem>\n            ))}\n          </StyledList>\n          <StyledP>\n            <strong>Starting proficiences</strong>:\n          </StyledP>\n          <StyledList>\n            {detailedRace.starting_proficiencies.map((item) => (\n              <StyledListItem key={item.index}>{item.name}</StyledListItem>\n            ))}\n          </StyledList>\n        </StyledDetails>\n      )}\n    </StyledRaceContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}