{"ast":null,"code":"var _jsxFileName = \"/Users/meganjevin/Desktop/Code/character-builder/src/app/pages/characterBuilder.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { useAppDispatch } from '../../helpers/hooks';\nimport { commonActions } from '../../store/slices/common';\nimport { useAllRaces } from '../../store/selectors/common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledCharacterBuilderContainer = styled.div``;\n_c = StyledCharacterBuilderContainer;\nconst StyledStepsContainer = styled.div``;\n_c2 = StyledStepsContainer;\nconst StyledStepsHeader = styled.h2``; // When page loads, animate into character builder component\n// When page loads, make a request to the API to get back all races\n\n_c3 = StyledStepsHeader;\nexport const CharacterBuilder = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const allRaces = useAllRaces();\n  React.useEffect(() => {\n    dispatch(commonActions.getAllRaces());\n    console.log(allRaces);\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(StyledCharacterBuilderContainer, {\n    children: [\"Character builder\", /*#__PURE__*/_jsxDEV(StyledStepsContainer, {\n      children: /*#__PURE__*/_jsxDEV(StyledStepsHeader, {\n        children: \"Step One: Race\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CharacterBuilder, \"8KvmyFSVn0CSGo2A9O4Sk3aZqRw=\", false, function () {\n  return [useAppDispatch, useAllRaces];\n});\n\n_c4 = CharacterBuilder;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledCharacterBuilderContainer\");\n$RefreshReg$(_c2, \"StyledStepsContainer\");\n$RefreshReg$(_c3, \"StyledStepsHeader\");\n$RefreshReg$(_c4, \"CharacterBuilder\");","map":{"version":3,"sources":["/Users/meganjevin/Desktop/Code/character-builder/src/app/pages/characterBuilder.tsx"],"names":["React","styled","useAppDispatch","commonActions","useAllRaces","StyledCharacterBuilderContainer","div","StyledStepsContainer","StyledStepsHeader","h2","CharacterBuilder","dispatch","allRaces","useEffect","getAllRaces","console","log"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,WAAT,QAA4B,8BAA5B;;AAEA,MAAMC,+BAA+B,GAAGJ,MAAM,CAACK,GAAI,EAAnD;KAAMD,+B;AAEN,MAAME,oBAAoB,GAAGN,MAAM,CAACK,GAAI,EAAxC;MAAMC,oB;AAEN,MAAMC,iBAAiB,GAAGP,MAAM,CAACQ,EAAG,EAApC,C,CAEA;AACA;;MAHMD,iB;AAKN,OAAO,MAAME,gBAA0B,GAAG,MAAM;AAAA;;AAC9C,QAAMC,QAAQ,GAAGT,cAAc,EAA/B;AACA,QAAMU,QAAQ,GAAGR,WAAW,EAA5B;AAEAJ,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpBF,IAAAA,QAAQ,CAACR,aAAa,CAACW,WAAd,EAAD,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACD,GAHD,EAGG,CAACD,QAAD,CAHH;AAKA,sBACE,QAAC,+BAAD;AAAA,iDAEE,QAAC,oBAAD;AAAA,6BACE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CApBM;;GAAMD,gB;UACMR,c,EACAE,W;;;MAFNM,gB","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { useAppDispatch } from '../../helpers/hooks';\nimport { commonActions } from '../../store/slices/common';\nimport { useAllRaces } from '../../store/selectors/common';\n\nconst StyledCharacterBuilderContainer = styled.div``;\n\nconst StyledStepsContainer = styled.div``;\n\nconst StyledStepsHeader = styled.h2``;\n\n// When page loads, animate into character builder component\n// When page loads, make a request to the API to get back all races\n\nexport const CharacterBuilder: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const allRaces = useAllRaces();\n\n  React.useEffect(() => {\n    dispatch(commonActions.getAllRaces());\n    console.log(allRaces);\n  }, [dispatch]);\n\n  return (\n    <StyledCharacterBuilderContainer>\n      Character builder\n      <StyledStepsContainer>\n        <StyledStepsHeader>Step One: Race</StyledStepsHeader>\n      </StyledStepsContainer>\n      {/*\n      {allRaces &&\n        allRaces.map((race) => <h1 key={race.index}>{race.name}</h1>)} */}\n    </StyledCharacterBuilderContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}