{"ast":null,"code":"var _jsxFileName = \"/Users/meganjevin/Desktop/Code/character-builder/src/app/components/abilityScores.tsx\";\nimport * as React from 'react';\nimport { StyledContainer, StyledStepsHeader, StyledStepsSubheader, StyledInput, StyledRandomiseButton, StyledStepContainer } from '../styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AbilityScores = () => {\n  var _selectedRace, _allRaces, _allRaces$results;\n\n  return /*#__PURE__*/_jsxDEV(StyledStepContainer, {\n    children: /*#__PURE__*/_jsxDEV(StyledContainer, {\n      children: [/*#__PURE__*/_jsxDEV(StyledStepsHeader, {\n        children: \"Step One: Race\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledStepsSubheader, {\n        children: [\"Select a race or\", ' ', /*#__PURE__*/_jsxDEV(StyledRandomiseButton, {\n          onClick: () => handleRandomRace(),\n          children: \"randomise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), ' ', \"it.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledInput, {\n        value: (_selectedRace = selectedRace) === null || _selectedRace === void 0 ? void 0 : _selectedRace.index,\n        ...props.register('race'),\n        onChange: e => {\n          handleSelectedRace(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"- - - -\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), allRaces && ((_allRaces = allRaces) === null || _allRaces === void 0 ? void 0 : (_allRaces$results = _allRaces.results) === null || _allRaces$results === void 0 ? void 0 : _allRaces$results.map(race => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: race.index,\n          children: race.name\n        }, race.index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), props.errors.race && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"This field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c = AbilityScores;\n\nvar _c;\n\n$RefreshReg$(_c, \"AbilityScores\");","map":{"version":3,"sources":["/Users/meganjevin/Desktop/Code/character-builder/src/app/components/abilityScores.tsx"],"names":["React","StyledContainer","StyledStepsHeader","StyledStepsSubheader","StyledInput","StyledRandomiseButton","StyledStepContainer","AbilityScores","handleRandomRace","selectedRace","index","props","register","e","handleSelectedRace","target","value","allRaces","results","map","race","name","errors"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AASA,SACEC,eADF,EAEEC,iBAFF,EAIEC,oBAJF,EAKEC,WALF,EAMEC,qBANF,EAOEC,mBAPF,QAcO,WAdP;;AAuBA,OAAO,MAAMC,aAA2C,GAAG,MAAM;AAAA;;AAC/D,sBACE,QAAC,mBAAD;AAAA,2BACE,QAAC,eAAD;AAAA,8BACE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,oBAAD;AAAA,uCACmB,GADnB,eAEE,QAAC,qBAAD;AAAuB,UAAA,OAAO,EAAE,MAAMC,gBAAgB,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAI2B,GAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eASE,QAAC,WAAD;AACE,QAAA,KAAK,mBAAEC,YAAF,kDAAE,cAAcC,KADvB;AAAA,WAEMC,KAAK,CAACC,QAAN,CAAe,MAAf,CAFN;AAGE,QAAA,QAAQ,EAAGC,CAAD,IAAO;AACfC,UAAAA,kBAAkB,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAlB;AACD,SALH;AAAA,gCAOE;AAAQ,UAAA,KAAK,EAAC,EAAd;AAAiB,UAAA,QAAQ,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,EAUGC,QAAQ,kBACPA,QADO,mEACP,UAAUC,OADH,sDACP,kBAAmBC,GAAnB,CAAwBC,IAAD,iBACrB;AAAyB,UAAA,KAAK,EAAEA,IAAI,CAACV,KAArC;AAAA,oBACGU,IAAI,CAACC;AADR,WAAaD,IAAI,CAACV,KAAlB;AAAA;AAAA;AAAA;AAAA,gBADF,CADO,CAVX;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,EA2BGC,KAAK,CAACW,MAAN,CAAaF,IAAb,iBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BxB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAlCM;KAAMb,a","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { DeepMap, FieldError, UseFormRegister } from 'react-hook-form';\nimport {\n  AbilityMapEnum,\n  APIReference,\n  CommonModel,\n  FormInputs,\n} from '../../types';\nimport {\n  StyledContainer,\n  StyledStepsHeader,\n  StyledDetailHeader,\n  StyledStepsSubheader,\n  StyledInput,\n  StyledRandomiseButton,\n  StyledStepContainer,\n  StyledDetails,\n  StyledP,\n  StyledList,\n  StyledListItem,\n  StyledButtonContainer,\n  StyledStepButton,\n} from '../styles';\n\ninterface AbilityScoresProps {\n  register: UseFormRegister<FormInputs>;\n  errors: DeepMap<FormInputs, FieldError>;\n  handleStepForward: () => void;\n  handleStepBack: () => void;\n}\n\nexport const AbilityScores: React.FC<AbilityScoresProps> = () => {\n  return (\n    <StyledStepContainer>\n      <StyledContainer>\n        <StyledStepsHeader>Step One: Race</StyledStepsHeader>\n        <StyledStepsSubheader>\n          Select a race or{' '}\n          <StyledRandomiseButton onClick={() => handleRandomRace()}>\n            randomise\n          </StyledRandomiseButton>{' '}\n          it.\n        </StyledStepsSubheader>\n        <StyledInput\n          value={selectedRace?.index}\n          {...props.register('race')}\n          onChange={(e) => {\n            handleSelectedRace(e.target.value);\n          }}\n        >\n          <option value=\"\" disabled>\n            - - - -\n          </option>\n          {allRaces &&\n            allRaces?.results?.map((race) => (\n              <option key={race.index} value={race.index}>\n                {race.name}\n              </option>\n            ))}\n        </StyledInput>\n\n        {props.errors.race && <span>This field is required</span>}\n      </StyledContainer>\n    </StyledStepContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}