{"ast":null,"code":"import { call, put } from 'redux-saga/effects';\nimport { getAllRaces, getAllSubRaces, getAllClasses } from '../../api';\nimport { commonActions } from '../slices/common';\nexport function* returnAllRaces() {\n  const response = yield call(getAllRaces);\n  yield put(commonActions.getAllRacesLoading());\n\n  if (response.data.results) {\n    yield put(commonActions.getAllRacesSuccess(response.data.results));\n  } else {\n    yield put(commonActions.getAllRacesFailure());\n  }\n}\nexport function* returnAllSubRaces() {\n  const response = yield call(getAllSubRaces);\n  yield put(commonActions.getAllSubRacesLoading());\n\n  if (response.data.results) {\n    yield put(commonActions.getAllSubRacesSuccess(response.data.results));\n  } else {\n    yield put(commonActions.getAllSubRacesFailure());\n  }\n}\nexport function* returnAllClasses() {\n  const response = yield call(getAllClasses);\n  yield put(commonActions.getAllClassesLoading());\n\n  if (response.data.results) {\n    yield put(commonActions.getAllClassesSuccess(response.data.results));\n  } else {\n    yield put(commonActions.getAllClassesFailure());\n  }\n}","map":{"version":3,"sources":["/Users/meganjevin/Desktop/Code/character-builder/src/store/sagas/common.ts"],"names":["call","put","getAllRaces","getAllSubRaces","getAllClasses","commonActions","returnAllRaces","response","getAllRacesLoading","data","results","getAllRacesSuccess","getAllRacesFailure","returnAllSubRaces","getAllSubRacesLoading","getAllSubRacesSuccess","getAllSubRacesFailure","returnAllClasses","getAllClassesLoading","getAllClassesSuccess","getAllClassesFailure"],"mappings":"AACA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,aAAtC,QAA6E,WAA7E;AAEA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,OAAO,UAAUC,cAAV,GAA2B;AAChC,QAAMC,QAAyC,GAAG,MAAMP,IAAI,CAACE,WAAD,CAA5D;AACA,QAAMD,GAAG,CAACI,aAAa,CAACG,kBAAd,EAAD,CAAT;;AAEA,MAAID,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,UAAMT,GAAG,CAACI,aAAa,CAACM,kBAAd,CAAiCJ,QAAQ,CAACE,IAAT,CAAcC,OAA/C,CAAD,CAAT;AACD,GAFD,MAEO;AACL,UAAMT,GAAG,CAACI,aAAa,CAACO,kBAAd,EAAD,CAAT;AACD;AACF;AAED,OAAO,UAAUC,iBAAV,GAA8B;AACnC,QAAMN,QAA4C,GAAG,MAAMP,IAAI,CAACG,cAAD,CAA/D;AACA,QAAMF,GAAG,CAACI,aAAa,CAACS,qBAAd,EAAD,CAAT;;AAEA,MAAIP,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,UAAMT,GAAG,CAACI,aAAa,CAACU,qBAAd,CAAoCR,QAAQ,CAACE,IAAT,CAAcC,OAAlD,CAAD,CAAT;AACD,GAFD,MAEO;AACL,UAAMT,GAAG,CAACI,aAAa,CAACW,qBAAd,EAAD,CAAT;AACD;AACF;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAClC,QAAMV,QAA2C,GAAG,MAAMP,IAAI,CAACI,aAAD,CAA9D;AACA,QAAMH,GAAG,CAACI,aAAa,CAACa,oBAAd,EAAD,CAAT;;AAEA,MAAIX,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzB,UAAMT,GAAG,CAACI,aAAa,CAACc,oBAAd,CAAmCZ,QAAQ,CAACE,IAAT,CAAcC,OAAjD,CAAD,CAAT;AACD,GAFD,MAEO;AACL,UAAMT,GAAG,CAACI,aAAa,CAACe,oBAAd,EAAD,CAAT;AACD;AACF","sourcesContent":["import { AxiosResponse } from 'axios';\nimport { call, put } from 'redux-saga/effects';\nimport { getAllRaces, getAllSubRaces, getAllClasses, getAllSubClasses } from '../../api';\nimport { APIRacesResponse, APISubRacesResponse, APIClassesResponse, APISubClassesResponse } from '../../api/types';\nimport { commonActions } from '../slices/common';\n\nexport function* returnAllRaces() {\n  const response: AxiosResponse<APIRacesResponse> = yield call(getAllRaces);\n  yield put(commonActions.getAllRacesLoading());\n\n  if (response.data.results) {\n    yield put(commonActions.getAllRacesSuccess(response.data.results));\n  } else {\n    yield put(commonActions.getAllRacesFailure());\n  }\n}\n\nexport function* returnAllSubRaces() {\n  const response: AxiosResponse<APISubRacesResponse> = yield call(getAllSubRaces);\n  yield put(commonActions.getAllSubRacesLoading());\n\n  if (response.data.results) {\n    yield put(commonActions.getAllSubRacesSuccess(response.data.results));\n  } else {\n    yield put(commonActions.getAllSubRacesFailure());\n  }\n}\n\nexport function* returnAllClasses() {\n  const response: AxiosResponse<APIClassesResponse> = yield call(getAllClasses);\n  yield put(commonActions.getAllClassesLoading());\n\n  if (response.data.results) {\n    yield put(commonActions.getAllClassesSuccess(response.data.results));\n  } else {\n    yield put(commonActions.getAllClassesFailure());\n  }\n}\n"]},"metadata":{},"sourceType":"module"}