{"ast":null,"code":"var _jsxFileName = \"/Users/meganjevin/Desktop/Code/character-builder/src/app/pages/characterBuilder.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useFormik, Form } from 'formik';\nimport styled from 'styled-components';\nimport { TEXT_COLOR_PRIMARY, TEXT_COLOR_SECONDARY } from '../styles';\nimport { Race } from '../components/race';\nimport { Class } from '../components/class';\nimport { AbilityScores } from '../components/abilityScores';\nimport { Background } from '../components/background';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledCharacterBuilderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100%;\n  color: ${TEXT_COLOR_PRIMARY};\n  margin-top: 32px;\n`;\n_c = StyledCharacterBuilderContainer;\nconst StyledCharacterBuilderTitle = styled.h1`\n  text-align: center;\n`;\n_c2 = StyledCharacterBuilderTitle;\nconst StyledCharacterBuilderTitleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  margin-bottom: 32px;\n`;\n_c3 = StyledCharacterBuilderTitleContainer;\nconst StyledStepsContainer = styled.div``;\n_c4 = StyledStepsContainer;\nconst StyledRandomiseButton = styled.a`\n  font-size: inherit;\n  color: ${TEXT_COLOR_SECONDARY};\n  &:hover {\n    cursor: pointer;\n    color: ${TEXT_COLOR_PRIMARY};\n  }\n`;\n_c5 = StyledRandomiseButton;\nconst StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n`;\n_c6 = StyledForm;\nconst StyledP = styled.p`\n  margin: 12px 0;\n`;\n_c7 = StyledP;\nconst StyledSelectedOptions = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nconst initialValues = {\n  race: '',\n  subRace: '',\n  class: '',\n  subClass: ''\n};\nexport const CharacterBuilder = () => {\n  _s();\n\n  const onSubmit = data => console.log(data); // const { values } = useFormikContext<FormInputs>();\n  // const selectedRace = values['race'];\n  // const selectedClass = values['class'];\n  // const selectedAbilities = values['abilityScores'];\n\n\n  const [stepNum, setStepNum] = React.useState(1);\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: ''\n    },\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(StyledCharacterBuilderContainer, {\n    children: [/*#__PURE__*/_jsxDEV(StyledCharacterBuilderTitleContainer, {\n      children: [/*#__PURE__*/_jsxDEV(StyledCharacterBuilderTitle, {\n        children: \"Character builder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledP, {\n        children: [\"Build your character step by step or completely\", ' ', /*#__PURE__*/_jsxDEV(StyledRandomiseButton, {\n          children: \"randomise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledStepsContainer, {\n      children: /*#__PURE__*/_jsxDEV(StyledForm, {\n        onSubmit: formik.handleSubmit,\n        children: [stepNum === 1 && /*#__PURE__*/_jsxDEV(Race, {\n          handleStepForward: () => setStepNum(stepNum + 1),\n          handleStepBack: () => setStepNum(stepNum - 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), stepNum === 2 && /*#__PURE__*/_jsxDEV(Class, {\n          handleStepForward: () => setStepNum(stepNum + 1),\n          handleStepBack: () => setStepNum(stepNum - 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), stepNum === 3 && /*#__PURE__*/_jsxDEV(AbilityScores, {\n          handleStepForward: () => setStepNum(stepNum + 1),\n          handleStepBack: () => setStepNum(stepNum - 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), stepNum === 4 && /*#__PURE__*/_jsxDEV(Background, {\n          handleStepForward: () => setStepNum(stepNum + 1),\n          handleStepBack: () => setStepNum(stepNum - 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CharacterBuilder, \"ZBf8aeMJb2cHyELZBbFxe6LigP8=\", false, function () {\n  return [useFormik];\n});\n\n_c8 = CharacterBuilder;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"StyledCharacterBuilderContainer\");\n$RefreshReg$(_c2, \"StyledCharacterBuilderTitle\");\n$RefreshReg$(_c3, \"StyledCharacterBuilderTitleContainer\");\n$RefreshReg$(_c4, \"StyledStepsContainer\");\n$RefreshReg$(_c5, \"StyledRandomiseButton\");\n$RefreshReg$(_c6, \"StyledForm\");\n$RefreshReg$(_c7, \"StyledP\");\n$RefreshReg$(_c8, \"CharacterBuilder\");","map":{"version":3,"sources":["/Users/meganjevin/Desktop/Code/character-builder/src/app/pages/characterBuilder.tsx"],"names":["React","useFormik","Form","styled","TEXT_COLOR_PRIMARY","TEXT_COLOR_SECONDARY","Race","Class","AbilityScores","Background","StyledCharacterBuilderContainer","div","StyledCharacterBuilderTitle","h1","StyledCharacterBuilderTitleContainer","StyledStepsContainer","StyledRandomiseButton","a","StyledForm","StyledP","p","StyledSelectedOptions","initialValues","race","subRace","class","subClass","CharacterBuilder","onSubmit","data","console","log","stepNum","setStepNum","useState","formik","firstName","lastName","email","values","alert","JSON","stringify","handleSubmit"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useFormik, Form, FormikProps } from 'formik';\nimport styled from 'styled-components';\nimport { TEXT_COLOR_PRIMARY, TEXT_COLOR_SECONDARY } from '../styles';\nimport { Race } from '../components/race';\nimport { Class } from '../components/class';\nimport {\n  AbilityOptions,\n  ClassEnum,\n  Classes,\n  FormInputs,\n  RaceEnum,\n  Races,\n} from '../../types';\nimport { AbilityScores } from '../components/abilityScores';\nimport { Background } from '../components/background';\n\nconst StyledCharacterBuilderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100%;\n  color: ${TEXT_COLOR_PRIMARY};\n  margin-top: 32px;\n`;\n\nconst StyledCharacterBuilderTitle = styled.h1`\n  text-align: center;\n`;\n\nconst StyledCharacterBuilderTitleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  margin-bottom: 32px;\n`;\n\nconst StyledStepsContainer = styled.div``;\n\nconst StyledRandomiseButton = styled.a`\n  font-size: inherit;\n  color: ${TEXT_COLOR_SECONDARY};\n  &:hover {\n    cursor: pointer;\n    color: ${TEXT_COLOR_PRIMARY};\n  }\n`;\n\nconst StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledP = styled.p`\n  margin: 12px 0;\n`;\n\nconst StyledSelectedOptions = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst initialValues: FormInputs = {\n  race: '',\n  subRace: '',\n  class: '',\n  subClass: '',\n};\n\nexport const CharacterBuilder: React.FC = () => {\n  const onSubmit = (data: any) => console.log(data);\n  // const { values } = useFormikContext<FormInputs>();\n  // const selectedRace = values['race'];\n  // const selectedClass = values['class'];\n  // const selectedAbilities = values['abilityScores'];\n  const [stepNum, setStepNum] = React.useState(1);\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n    },\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n  return (\n    <StyledCharacterBuilderContainer>\n      <StyledCharacterBuilderTitleContainer>\n        <StyledCharacterBuilderTitle>\n          Character builder\n        </StyledCharacterBuilderTitle>\n        <StyledP>\n          Build your character step by step or completely{' '}\n          <StyledRandomiseButton>randomise</StyledRandomiseButton>.\n        </StyledP>\n      </StyledCharacterBuilderTitleContainer>\n      {/* <Formik onSubmit={onSubmit} initialValues={{ initialValues }}> */}\n      {/* <StyledSelectedOptions>\n          {selectedRace !== '' && (\n            <span>\n              <strong>Race</strong>: {RaceEnum[selectedRace]}\n            </span>\n          )}\n          {selectedClass !== '' && (\n            <span>\n              | <strong>Class</strong>: {ClassEnum[selectedClass]}\n            </span>\n          )}\n        </StyledSelectedOptions>\n        <StyledSelectedOptions>\n          {selectedAbilities?.strength && (\n            <span>\n              <strong>STR</strong>: {selectedAbilities.strength}\n            </span>\n          )}\n          {selectedAbilities?.dexterity && (\n            <span>\n              <strong>DEX</strong>: {selectedAbilities.dexterity}\n            </span>\n          )}\n          {selectedAbilities?.constitution && (\n            <span>\n              <strong>CON</strong>: {selectedAbilities.constitution}\n            </span>\n          )}\n          {selectedAbilities?.intelligence && (\n            <span>\n              <strong>INT</strong>: {selectedAbilities.intelligence}\n            </span>\n          )}\n          {selectedAbilities?.wisdom && (\n            <span>\n              <strong>WIS</strong>: {selectedAbilities.wisdom}\n            </span>\n          )}\n          {selectedAbilities?.charisma && (\n            <span>\n              <strong>CHA</strong>: {selectedAbilities.charisma}\n            </span>\n          )}\n        </StyledSelectedOptions> */}\n      <StyledStepsContainer>\n        <StyledForm onSubmit={formik.handleSubmit}>\n          {stepNum === 1 && (\n            <Race\n              handleStepForward={() => setStepNum(stepNum + 1)}\n              handleStepBack={() => setStepNum(stepNum - 1)}\n            />\n          )}\n          {stepNum === 2 && (\n            <Class\n              handleStepForward={() => setStepNum(stepNum + 1)}\n              handleStepBack={() => setStepNum(stepNum - 1)}\n            />\n          )}\n          {stepNum === 3 && (\n            <AbilityScores\n              handleStepForward={() => setStepNum(stepNum + 1)}\n              handleStepBack={() => setStepNum(stepNum - 1)}\n            />\n          )}\n          {stepNum === 4 && (\n            <Background\n              handleStepForward={() => setStepNum(stepNum + 1)}\n              handleStepBack={() => setStepNum(stepNum - 1)}\n            />\n          )}\n        </StyledForm>\n      </StyledStepsContainer>\n      {/* </Formik> */}\n    </StyledCharacterBuilderContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}