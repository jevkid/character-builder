{"ast":null,"code":"import { createAction, createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  races: {\n    loading: false,\n    error: false,\n    options: {\n      count: 0,\n      results: []\n    }\n  },\n  detailedRace: {\n    loading: false,\n    error: false\n  },\n  subRaces: {\n    loading: false,\n    error: false,\n    options: {\n      count: 0,\n      results: []\n    }\n  },\n  classes: {\n    loading: false,\n    error: false,\n    options: {\n      count: 0,\n      results: []\n    }\n  },\n  subClasses: {\n    loading: false,\n    error: false,\n    options: {\n      count: 0,\n      results: []\n    }\n  },\n  backgrounds: {\n    loading: false,\n    error: false,\n    options: []\n  }\n};\nconst SLICE_NAME = 'common';\nconst commonSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {\n    getDetailedRaceLoading: state => {\n      state.detailedRace.loading = true;\n    },\n    getDetailedRaceSuccess: (state, action) => {\n      state.detailedRace.loading = false;\n      state.detailedRace.error = false;\n      state.detailedRace.details = action.payload;\n    },\n    getDetailedRaceFailure: state => {\n      state.detailedRace.loading = false;\n      state.detailedRace.error = true;\n    },\n    getAllRacesLoading: state => {\n      state.races.loading = true;\n    },\n    getAllRacesSuccess: (state, action) => {\n      state.races.loading = false;\n      state.races.error = false;\n      state.races.options = action.payload;\n    },\n    getAllRacesFailure: state => {\n      state.races.loading = false;\n      state.races.error = true;\n    },\n    getAllSubRacesLoading: state => {\n      state.subRaces.loading = true;\n    },\n    getAllSubRacesSuccess: (state, action) => {\n      state.subRaces.loading = false;\n      state.subRaces.error = false;\n      state.subRaces.options = action.payload;\n    },\n    getAllSubRacesFailure: state => {\n      state.subRaces.loading = false;\n      state.subRaces.error = true;\n    },\n    getAllClassesLoading: state => {\n      state.subRaces.loading = true;\n    },\n    getAllClassesSuccess: (state, action) => {\n      state.classes.loading = false;\n      state.classes.error = false;\n      state.classes.options = action.payload;\n    },\n    getAllClassesFailure: state => {\n      state.classes.loading = false;\n      state.classes.error = true;\n    },\n    getAllSubClassesLoading: state => {\n      state.subClasses.loading = true;\n    },\n    getAllSubClassesSuccess: (state, action) => {\n      state.subClasses.loading = false;\n      state.subClasses.error = false;\n      state.subClasses.options = action.payload;\n    },\n    getAllSubClassesFailure: state => {\n      state.subClasses.loading = false;\n      state.subClasses.error = true;\n    }\n  }\n});\nexport const {\n  reducer: commonReducer\n} = commonSlice;\nexport const commonActions = { ...commonSlice.actions,\n  getAllRaces: createAction(`${SLICE_NAME}/getAllRaces`),\n  getRaceDetails: createAction(`${SLICE_NAME}/getRaceDetails`, payload => ({\n    payload\n  })),\n  getAllSubRaces: createAction(`${SLICE_NAME}/getAllSubRaces`, payload => ({\n    payload\n  })),\n  getAllClasses: createAction(`${SLICE_NAME}/getAllClasses`),\n  getAllSubClasses: createAction(`${SLICE_NAME}/getAllSubClasses`, payload => ({\n    payload\n  }))\n};","map":{"version":3,"sources":["/Users/meganjevin/Desktop/Code/character-builder/src/store/slices/common.ts"],"names":["createAction","createSlice","initialState","races","loading","error","options","count","results","detailedRace","subRaces","classes","subClasses","backgrounds","SLICE_NAME","commonSlice","name","reducers","getDetailedRaceLoading","state","getDetailedRaceSuccess","action","details","payload","getDetailedRaceFailure","getAllRacesLoading","getAllRacesSuccess","getAllRacesFailure","getAllSubRacesLoading","getAllSubRacesSuccess","getAllSubRacesFailure","getAllClassesLoading","getAllClassesSuccess","getAllClassesFailure","getAllSubClassesLoading","getAllSubClassesSuccess","getAllSubClassesFailure","reducer","commonReducer","commonActions","actions","getAllRaces","getRaceDetails","getAllSubRaces","getAllClasses","getAllSubClasses"],"mappings":"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","sourcesContent":["import { PayloadAction, createAction, createSlice } from '@reduxjs/toolkit';\nimport { APIAllRacesResponse, APIAllSubRacesResponse, APIAllClassesResponse, APIAllSubClassesResponse } from '../../api/types';\nimport { Race } from '../../types';\n\nexport interface CommonState {\n  races: {\n    loading: boolean;\n    error: boolean;\n    options: APIAllRacesResponse;\n    selected?: string;\n  },\n  detailedRace: {\n    loading: boolean;\n    error: boolean;\n    details?: Race;\n  }\n  subRaces: {\n    loading: boolean;\n    error: boolean;\n    options: APIAllSubRacesResponse;\n    selected?: string;\n  },\n  classes: {\n    loading: boolean;\n    error: boolean;\n    options: APIAllClassesResponse;\n    selected?: string;\n  },\n  subClasses: {\n    loading: boolean;\n    error: boolean;\n    options: APIAllSubClassesResponse;\n    selected?: string;\n  },\n  backgrounds: {\n    loading: boolean;\n    error: boolean;\n    options: [];\n    selected?: string;\n  },\n}\n\nconst initialState: CommonState = {\n  races: {\n    loading: false,\n    error: false,\n    options: {\n      count: 0,\n      results: []\n    },\n  },\n  detailedRace: {\n    loading: false,\n    error: false,\n  },\n  subRaces: {\n    loading: false,\n    error: false,\n    options: {\n      count: 0,\n      results: []\n    },\n  },\n  classes: {\n    loading: false,\n    error: false,\n    options: {\n      count: 0,\n      results: []\n    },\n  },\n  subClasses: {\n    loading: false,\n    error: false,\n    options: {\n      count: 0,\n      results: []\n    },\n  },\n  backgrounds: {\n    loading: false,\n    error: false,\n    options: [],\n  },\n};\n\nconst SLICE_NAME = 'common';\n\nconst commonSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {\n    getDetailedRaceLoading: (state) => {\n      state.detailedRace.loading = true;\n    },\n    getDetailedRaceSuccess: (state, action: PayloadAction<Race>) => {\n      state.detailedRace.loading = false;\n      state.detailedRace.error = false;\n      state.detailedRace.details = action.payload;\n    },\n    getDetailedRaceFailure: (state) => {\n      state.detailedRace.loading = false;\n      state.detailedRace.error = true;\n    },\n    getAllRacesLoading: (state) => {\n      state.races.loading = true;\n    },\n    getAllRacesSuccess: (state, action: PayloadAction<APIAllRacesResponse>) => {\n      state.races.loading = false;\n      state.races.error = false;\n      state.races.options = action.payload;\n    },\n    getAllRacesFailure: (state) => {\n      state.races.loading = false;\n      state.races.error = true;\n    },\n    getAllSubRacesLoading: (state) => {\n      state.subRaces.loading = true;\n    },\n    getAllSubRacesSuccess: (state, action: PayloadAction<APIAllSubRacesResponse>) => {\n      state.subRaces.loading = false;\n      state.subRaces.error = false;\n      state.subRaces.options = action.payload;\n    },\n    getAllSubRacesFailure: (state) => {\n      state.subRaces.loading = false;\n      state.subRaces.error = true;\n    },\n    getAllClassesLoading: (state) => {\n      state.subRaces.loading = true;\n    },\n    getAllClassesSuccess: (state, action: PayloadAction<APIAllClassesResponse>) => {\n      state.classes.loading = false;\n      state.classes.error = false;\n      state.classes.options = action.payload;\n    },\n    getAllClassesFailure: (state) => {\n      state.classes.loading = false;\n      state.classes.error = true;\n    },\n    getAllSubClassesLoading: (state) => {\n      state.subClasses.loading = true;\n    },\n    getAllSubClassesSuccess: (state, action: PayloadAction<APIAllSubClassesResponse>) => {\n      state.subClasses.loading = false;\n      state.subClasses.error = false;\n      state.subClasses.options = action.payload;\n    },\n    getAllSubClassesFailure: (state) => {\n      state.subClasses.loading = false;\n      state.subClasses.error = true;\n    },\n  },\n});\n\nexport const { reducer: commonReducer } = commonSlice;\n\nexport const commonActions = {\n  ...commonSlice.actions,\n\n  getAllRaces: createAction(`${SLICE_NAME}/getAllRaces`),\n  getRaceDetails: createAction(\n    `${SLICE_NAME}/getRaceDetails`,\n    (payload: { index: string }) => ({\n      payload,\n    }),\n  ),\n  getAllSubRaces: createAction(\n    `${SLICE_NAME}/getAllSubRaces`,\n    (payload: { index: string }) => ({\n      payload,\n    }),\n  ),\n  getAllClasses: createAction(`${SLICE_NAME}/getAllClasses`),\n  getAllSubClasses: createAction(\n    `${SLICE_NAME}/getAllSubClasses`,\n    (payload: { index: string }) => ({\n      payload,\n    })\n  ),\n};\n"]},"metadata":{},"sourceType":"module"}